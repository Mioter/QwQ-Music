<Grid mc:Ignorable="d" d:DesignHeight="100" d:DesignWidth="650"
      x:Class="QwQ_Music.Views.Drawers.MusicPlayerTray"
      x:DataType="drawers:MusicPlayerTrayViewModel"
      xmlns="https://github.com/avaloniaui"
      xmlns:control="clr-namespace:QwQ.Avalonia.Control;assembly=QwQ.Avalonia.Control"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:userControls="clr-namespace:QwQ_Music.Views.UserControls"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:drawers="clr-namespace:QwQ_Music.ViewModels.Drawers"
      xmlns:behaviors="clr-namespace:QwQ_Music.UI.Behaviors"
      xmlns:enums="clr-namespace:QwQ_Music.Models.Enums"
      ColumnDefinitions="Auto,Auto,6*">

    <Grid.Styles>

        <Style Selector="userControls|MusicAlbumCover.AlbumCoverRotate">
            <Style.Animations>
                <Animation
                    Duration="0:0:15"
                    FillMode="Forward"
                    IterationCount="Infinite">
                    <KeyFrame Cue="0%">
                        <Setter Property="RotateTransform.Angle" Value="{Binding AlbumCoverRecordAngle}" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="RotateTransform.Angle"
                                Value="{Binding AlbumCoverRecordAngle, Converter={StaticResource CalcConverter}, ConverterParameter='@VALUE + 360'}" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

    </Grid.Styles>

    <!--  专辑按钮  -->
    <Button Classes="None"
            Command="{Binding DrawerStatusViewModel.ShowMusicPlayerPageCommand}">

        <userControls:MusicAlbumCover
            Classes.AlbumCoverRotate="{Binding MusicPlayerViewModel.IsPlaying}"
            CoverImage="{Binding MusicPlayerViewModel.CurrentMusicItem.CoverImage}">

            <userControls:MusicAlbumCover.RenderTransform>
                <RotateTransform Angle="{Binding AlbumCoverCurrentAngle, Mode=OneWayToSource}" />
            </userControls:MusicAlbumCover.RenderTransform>

        </userControls:MusicAlbumCover>
    </Button>

    <!--  音乐信息  -->
    <StackPanel Grid.Column="1"
                HorizontalAlignment="Left"
                Spacing="5"
                VerticalAlignment="Center"
                Width="60">

        <!--
        <control:RunningText
            Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Title}"
            Direction="RightToLeft"
            FontWeight="Bold"
            Padding="0"
            Speed="30" />
            -->

        <TextBlock FontWeight="Bold"
                   Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Title}"
                   TextTrimming="CharacterEllipsis"
                   ToolTip.Tip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />

        <control:SwitchControl Condition="{Binding MusicPlayerViewModel.IsPlaying}">

            <control:SwitchControl.TrueContent>

                <control:SwitchControl>

                    <control:SwitchControl.Condition>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="RolledLyric.ShowTranslation" />
                            <Binding Path="MusicPlayerViewModel.LyricsModel.CurrentLyric.Translation"
                                     Converter="{x:Static StringConverters.IsNotNullOrEmpty}" />
                        </MultiBinding>
                    </control:SwitchControl.Condition>

                    <control:SwitchControl.TrueContent>

                        <!--<control:RunningText Text="{Binding MusicPlayerViewModel.LyricsModel.CurrentLyric.Translation}"
                                             Direction="RightToLeft"
                                             FontSize="12" PlaceholderText="♪ ♪ ♪"
                                             Foreground="{DynamicResource TextBlockTertiaryForeground}"
                                             Speed="30" />-->

                        <TextBlock FontSize="12"
                                   MaxLines="2"
                                   Text="{Binding MusicPlayerViewModel.LyricsModel.CurrentLyric.Translation}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap"
                                   ToolTip.Tip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />

                    </control:SwitchControl.TrueContent>

                    <control:SwitchControl.FalseContent>

                        <!--
                        <control:RunningText
                            Text="{Binding MusicPlayerViewModel.LyricsModel.CurrentLyric.Primary}"
                            Direction="RightToLeft"
                            FontSize="12"
                            PlaceholderText="♪ ♪ ♪"
                            Foreground="{DynamicResource TextBlockTertiaryForeground}"
                            Speed="30" />
                            -->

                        <TextBlock FontSize="12"
                                   MaxLines="2"
                                   Text="{Binding MusicPlayerViewModel.LyricsModel.CurrentLyric.Primary}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap"
                                   ToolTip.Tip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />

                    </control:SwitchControl.FalseContent>
                </control:SwitchControl>


            </control:SwitchControl.TrueContent>

            <control:SwitchControl.FalseContent>

                <!--
                <control:RunningText
                    Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Artists}"
                    Direction="RightToLeft"
                    FontSize="12"
                    Foreground="{DynamicResource TextBlockTertiaryForeground}"
                    Speed="30" />
                    -->

                <TextBlock Classes="Tertiary"
                           FontSize="12"
                           MaxLines="2"
                           Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Artists}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="Wrap"
                           ToolTip.Tip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />

            </control:SwitchControl.FalseContent>

        </control:SwitchControl>

    </StackPanel>

    <!--  播放控制  -->
    <Grid
        ColumnDefinitions="*,Auto"
        Grid.Column="2"
        Margin="0,0,0,10"
        RowDefinitions="*,Auto">

        <!--  播放控制  -->
        <StackPanel
            HorizontalAlignment="Center"
            Orientation="Horizontal"
            Spacing="20">

            <StackPanel.Styles>
                <Style Selector="StackPanel > Button">
                    <Setter Property="Padding" Value="0" />
                </Style>
            </StackPanel.Styles>

            <!--  刷新播放  -->
            <Button
                Classes="Icon"
                ToolTip.Tip="刷新播放"
                Command="{Binding MusicPlayerViewModel.RefreshPlaybackCommand}"
                Foreground="{DynamicResource TextBlockDefaultForeground}"
                Height="25"
                IsEnabled="{Binding MusicPlayerViewModel.CurrentMusicItem.FilePath, Converter={x:Static ObjectConverters.NotEqual}, ConverterParameter=''}"
                behaviors:DynamicCornerBehavior.IsEnabled="True">
                <PathIcon Data="{StaticResource SemiIconRefresh2}" Margin="5" />
            </Button>

            <!--  上一首  -->
            <Button
                Classes="Icon"
                ToolTip.Tip="上一首"
                Command="{Binding MusicPlayerViewModel.PreviousSongCommand}"
                Foreground="{DynamicResource TextBlockDefaultForeground}"
                behaviors:DynamicCornerBehavior.IsEnabled="True">
                <PathIcon
                    Data="{StaticResource PlayIconData}"
                    Height="30"
                    RenderTransform="rotate(180deg)" />
            </Button>

            <!--  播放/暂停 按钮  -->
            <userControls:MusicPlayButton />

            <!--  下一首  -->
            <Button
                Classes="Icon"
                ToolTip.Tip="下一首"
                Command="{Binding MusicPlayerViewModel.NextSongCommand}"
                Foreground="{DynamicResource TextBlockDefaultForeground}"
                behaviors:DynamicCornerBehavior.IsEnabled="True">
                <PathIcon Data="{StaticResource PlayIconData}" Height="30" />
            </Button>

            <!--  播放模式  -->
            <Button
                Classes="Icon"
                Command="{Binding MusicPlayerViewModel.TogglePlayModeCommand}"
                Foreground="{DynamicResource TextBlockDefaultForeground}"
                Height="25"
                ToolTip.Placement="Top"
                ToolTip.Tip="{Binding MusicPlayerViewModel.PlayModeName}"
                ToolTip.VerticalOffset="-10"
                behaviors:DynamicCornerBehavior.IsEnabled="True">
                <control:ChoiceControl Selected="{Binding MusicPlayerViewModel.PlayerConfig.PlayMode}"
                                       TargetType="{x:Type enums:PlayMode}">
                    <PathIcon
                        Data="{StaticResource Sequential}"
                        Margin="3.6"
                        control:ChoiceControl.SelectName="Sequential" />

                    <PathIcon
                        Data="{StaticResource Random}"
                        Margin="4.8"
                        control:ChoiceControl.SelectName="Random" />

                    <PathIcon
                        Data="{StaticResource SingleLoop}"
                        Margin="4"
                        control:ChoiceControl.SelectName="SingleLoop" />
                </control:ChoiceControl>
            </Button>

        </StackPanel>

        <!--  进度条  -->
        <Slider
            Grid.Column="0"
            Grid.Row="1"
            Margin="10,0"
            Maximum="{Binding MusicPlayerViewModel.CurrentMusicItem.Duration.TotalSeconds}"
            Value="{Binding MusicPlayerViewModel.Position}" />

        <!--  播放时长 / 总时长  -->
        <StackPanel
            Grid.Column="1"
            Grid.Row="1"
            Orientation="Horizontal">

            <TextBlock
                FontSize="13"
                Text="{Binding MusicPlayerViewModel.Position, Mode=OneWay, Converter={StaticResource SecondsToStringConverter}}"
                VerticalAlignment="Center" />

            <TextBlock
                FontSize="11"
                Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Duration, Mode=OneWay, Converter={StaticResource TruncateDecimalConverter}, StringFormat=' / {0}'}"
                VerticalAlignment="Center" />

            <StackPanel.Styles>
                <Style Selector="StackPanel > TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </StackPanel.Styles>

        </StackPanel>

        <!--  操作按钮  -->
        <WrapPanel
            Grid.Column="1"
            Grid.Row="0"
            HorizontalAlignment="Right"
            ItemSpacing="10"
            LineSpacing="10"
            VerticalAlignment="Center"
            Width="100">

            <WrapPanel.Styles>

                <Style Selector="WrapPanel > Button">
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Width" Value="20" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="CornerRadius" Value="5" />
                </Style>

            </WrapPanel.Styles>

            <WrapPanel.Resources>

                <!-- ReSharper disable once Xaml.RedundantResource -->
                <x:Double x:Key="FlyoutMinWidth">30</x:Double>
                <!-- ReSharper disable once Xaml.RedundantResource -->
                <Thickness x:Key="FlyoutPadding">0</Thickness>
                <!-- ReSharper disable once Xaml.RedundantResource -->
                <x:Double x:Key="FlyoutMinHeight">30</x:Double>

            </WrapPanel.Resources>

            <Button ToolTip.Tip="播放效果" Classes="Icon">

                <PathIcon
                    Data="{StaticResource SemiIconSimilarity}"
                    Height="13"
                    Width="13" />

                <Button.Flyout>

                    <Flyout Placement="Top" ShowMode="TransientWithDismissOnPointerMoveAway">

                        <StackPanel
                            Margin="10"
                            Spacing="5"
                            Width="180">

                            <TextBlock
                                FontSize="12"
                                FontWeight="Bold"
                                HorizontalAlignment="Center"
                                Text="{Binding MusicPlayerViewModel.Speed, StringFormat='播放速率 : {0:F3}'}" />

                            <Slider
                                Maximum="1.5"
                                Minimum="0.5"
                                Value="{Binding MusicPlayerViewModel.Speed}">

                                <Interaction.Behaviors>

                                    <PointerWheelChangedTrigger>
                                        <InvokeCommandAction Command="{Binding SpeedBarPointerWheelChangedCommand}"
                                                             PassEventArgsToCommand="True" />
                                    </PointerWheelChangedTrigger>

                                </Interaction.Behaviors>

                            </Slider>

                            <Panel>

                                <Panel.Styles>

                                    <Style Selector="Panel > Button">
                                        <Setter Property="Height" Value="25" />
                                        <Setter Property="Width" Value="25" />
                                        <Setter Property="Padding" Value="6" />
                                        <Setter Property="CornerRadius" Value="15" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>

                                </Panel.Styles>

                                <Button
                                    HorizontalAlignment="Left"
                                    Classes="Icon"
                                    ToolTip.Tip="跳转至音效"
                                    Command="{Binding NavigationToSoundEffectViewCommand}"
                                    IsEnabled="{Binding !IsSoundEffectView}">
                                    <PathIcon
                                        Data="{StaticResource SemiIconLink}" />
                                </Button>

                                <Border HorizontalAlignment="Center" CornerRadius="15"
                                        BorderBrush="{DynamicResource BorderCardBorderBrush}"
                                        BorderThickness="1" Padding="2,0">

                                    <StackPanel Orientation="Horizontal" Spacing="3">

                                        <StackPanel.Styles>

                                            <Style Selector="StackPanel > Button">
                                                <Setter Property="Height" Value="25" />
                                                <Setter Property="Width" Value="25" />
                                                <Setter Property="Padding" Value="4" />
                                                <Setter Property="CornerRadius" Value="15" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>

                                        </StackPanel.Styles>

                                        <!--  Speed-  -->
                                        <Button
                                            ToolTip.Tip="播放速度➖"
                                            Classes="Icon"
                                            Command="{Binding PlaySpeedDownCommand}"
                                            Foreground="{DynamicResource TextBlockDefaultForeground}">
                                            <PathIcon
                                                Data="{StaticResource PlayIconData}"
                                                RenderTransform="rotate(180deg)" />
                                        </Button>

                                        <Button
                                            Classes="Icon"
                                            Height="30"
                                            Width="30"
                                            ToolTip.Tip="重置播放速度"
                                            Padding="7"
                                            Command="{Binding ResetPlaybackSpeedCommand}">
                                            <PathIcon
                                                Data="{StaticResource SemiIconRefresh}" />
                                        </Button>

                                        <!--  Speed+ -->
                                        <Button
                                            Classes="Icon"
                                            ToolTip.Tip="播放速度➕"
                                            Command="{Binding PlaySpeedUpCommand}"
                                            Foreground="{DynamicResource TextBlockDefaultForeground}">
                                            <PathIcon Data="{StaticResource PlayIconData}" />
                                        </Button>

                                    </StackPanel>
                                </Border>

                            </Panel>

                        </StackPanel>
                    </Flyout>

                </Button.Flyout>

            </Button>

            <Button
                Classes="Icon"
                ToolTip.Placement="Top"
                ToolTip.VerticalOffset="-10">

                <Panel>
                    <Border
                        Background="#20c997"
                        IsVisible="{Binding !MusicPlayerViewModel.IsMuted}"
                        Margin="8,4,2,4"
                        behaviors:DynamicCornerBehavior.IsEnabled="True" />
                    <PathIcon
                        Data="{StaticResource EmptyVolume}"
                        Height="14"
                        Margin="0,0,2,0"
                        Width="14" />
                    <Border
                        Background="{DynamicResource SemiRed4}"
                        CornerRadius="10"
                        IsVisible="{Binding MusicPlayerViewModel.IsMuted}"
                        Margin="0"
                        RenderTransform="rotate(120deg)"
                        Width="3" />
                </Panel>


                <Button.Flyout>
                    <Flyout Placement="Top" ShowMode="TransientWithDismissOnPointerMoveAway">

                        <Grid
                            Height="180"
                            Margin="0,5,0,0"
                            RowDefinitions="Auto,*,Auto">

                            <TextBlock
                                FontSize="12"
                                FontWeight="Bold"
                                HorizontalAlignment="Center"
                                Margin="0,0,0,3"
                                Text="{Binding MusicPlayerViewModel.Volume}" />

                            <Slider
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                Maximum="100"
                                Orientation="Vertical"
                                Value="{Binding MusicPlayerViewModel.Volume}" />

                            <Button
                                Classes="Icon"
                                Classes.Silent="{Binding MusicPlayerViewModel.IsMuted}"
                                Command="{Binding MusicPlayerViewModel.ToggleMuteCommand}"
                                CornerRadius="8"
                                Grid.Row="2"
                                Margin="8"
                                Padding="0">

                                <PathIcon Data="{StaticResource Prohibit}" Width="25" />

                                <Button.Styles>
                                    <Style Selector="Button.Silent">
                                        <Setter Property="Background" Value="{DynamicResource SemiRed5}" />
                                        <Setter Property="Foreground" Value="White" />
                                        <Style Selector="^:pointerover /template/ ContentPresenter">
                                            <Setter Property="Background" Value="{DynamicResource SemiRed4}" />
                                        </Style>
                                    </Style>
                                </Button.Styles>

                                <Interaction.Behaviors>

                                    <PointerWheelChangedTrigger>
                                        <InvokeCommandAction
                                            Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                            PassEventArgsToCommand="True" />
                                    </PointerWheelChangedTrigger>

                                </Interaction.Behaviors>

                            </Button>

                        </Grid>
                    </Flyout>
                </Button.Flyout>

                <ToolTip.Tip>

                    <control:SwitchControl Condition="{Binding MusicPlayerViewModel.Volume,Mode=OneWay}">
                        <control:SwitchControl.TrueContent>
                            <TextBlock>
                                <Run Text="当前音量：" />
                                <Run Text="{Binding MusicPlayerViewModel.Volume}" />
                                <Run Text="%" />
                            </TextBlock>
                        </control:SwitchControl.TrueContent>
                        <control:SwitchControl.FalseContent>
                            <TextBlock Text="静音" />
                        </control:SwitchControl.FalseContent>
                    </control:SwitchControl>

                </ToolTip.Tip>

                <Interaction.Behaviors>

                    <PointerWheelChangedTrigger>
                        <InvokeCommandAction Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                             PassEventArgsToCommand="True" />
                    </PointerWheelChangedTrigger>

                </Interaction.Behaviors>

            </Button>

            <Button Classes="Icon"
                    ToolTip.Tip="切换播放列表"
                    Command="{Binding DrawerStatusViewModel.ShowMusicPlaylistCommand}">
                <PathIcon
                    Data="{StaticResource SemiIconDescend2}"
                    Height="12"
                    Width="12" />
            </Button>

        </WrapPanel>
    </Grid>


</Grid>