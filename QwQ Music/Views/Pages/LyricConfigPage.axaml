<Grid ColumnDefinitions="Auto,*" ColumnSpacing="20" Margin="0,10"
      x:Class="QwQ_Music.Views.Pages.LyricConfigPage"
      x:DataType="pages:LyricConfigPageViewModel"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
      xmlns="https://github.com/avaloniaui"
      xmlns:u="https://irihi.tech/ursa"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:pages="clr-namespace:QwQ_Music.ViewModels.Pages"
      xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls.ColorPicker"
      xmlns:converters1="clr-namespace:Avalonia.Controls.Primitives.Converters;assembly=Avalonia.Controls.ColorPicker"
      xmlns:configModels="clr-namespace:QwQ_Music.Models.ConfigModels"
      xmlns:anchorControl="clr-namespace:QwQ_Music.UI.Controls.AnchorControl"
      xmlns:models="clr-namespace:QwQ_Music.Models"
      xmlns:userControls="clr-namespace:QwQ_Music.Views.UserControls">

    <Grid.Resources>
        <converters:ToBrushConverter x:Key="ToBrushConverter" />
        <converters1:ContrastBrushConverter x:Key="ContrastBrushConverter" />
    </Grid.Resources>

    <u:SelectionList Grid.Column="0" Name="NavigationList">

        <TextBlock Text="界面" />
        <TextBlock Text="显示" />
        <TextBlock Text="样式" />

    </u:SelectionList>

    <anchorControl:Anchor Grid.Column="1" IndexSource="{Binding ElementName=NavigationList}">

        <anchorControl:Anchor.Styles>

            <Style Selector="StackPanel">
                <Setter Property="Spacing" Value="10" />
            </Style>

        </anchorControl:Anchor.Styles>

        <anchorControl:Anchor.HeaderTemplate>

            <DataTemplate DataType="models:AnchorHeaderModel">
                <DockPanel HorizontalSpacing="10">
                    <Separator VerticalAlignment="Bottom" Margin="0" DockPanel.Dock="Bottom" />
                    <TextBlock FontSize="16" Text="{Binding Name}" FontWeight="Bold" VerticalAlignment="Center" />
                    <TextBlock Text="{Binding Describe}"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource SemiColorTertiary}" />
                </DockPanel>
            </DataTemplate>

        </anchorControl:Anchor.HeaderTemplate>

        <anchorControl:AnchorItem>

            <anchorControl:AnchorItem.Header>
                <models:AnchorHeaderModel Name="界面" Describe="播放器界面的歌词设置" />
            </anchorControl:AnchorItem.Header>

            <StackPanel>

                <Panel>
                    <TextBlock Text="对齐方式" VerticalAlignment="Center" />
                    <ComboBox
                        Width="80"
                        HorizontalAlignment="Right"
                        DisplayMemberBinding="{Binding Value}"
                        SelectedValueBinding="{Binding Key}"
                        ItemsSource="{x:Static configModels:LyricConfig.TextAlignments}"
                        SelectedValue="{Binding LyricConfig.RolledLyric.LyricTextAlignment}" />
                </Panel>

                <CheckBox Content="显示翻译" IsChecked="{Binding LyricConfig.RolledLyric.ShowTranslation}" />

                <Panel>
                    <TextBlock Text="字体" VerticalAlignment="Center" />
                    <Button HorizontalAlignment="Right"
                            Content="{Binding LyricConfig.RolledLyric.RolledLyricsFont}"
                            Theme="{StaticResource ComboButton}">

                        <Button.Styles>

                            <Style Selector="Button:pressed">
                                <Setter Property="RenderTransform" Value="translateY(0px)" />
                            </Style>

                        </Button.Styles>

                        <Button.Flyout>
                            <Flyout>
                                <userControls:FontSelector
                                    SelectedFont="{Binding LyricConfig.RolledLyric.RolledLyricsFont}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Panel>

                <TextBlock Text="主歌词大小" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                    Value="{Binding LyricConfig.RolledLyric.PrimaryFontSize}" />

                <TextBlock Text="翻译歌词大小" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                    Value="{Binding LyricConfig.RolledLyric.TranslationFontSize}" />

                <TextBlock Text="歌词行间距" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                    Value="{Binding LyricConfig.RolledLyric.LyricsLineSpacing}" />

                <TextBlock Text="歌词翻译间距" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                    Value="{Binding LyricConfig.RolledLyric.TranslationSpacing}" />
            </StackPanel>

        </anchorControl:AnchorItem>

        <anchorControl:AnchorItem>

            <anchorControl:AnchorItem.Header>
                <models:AnchorHeaderModel Name="显示" Describe="桌面歌词显示设置" />
            </anchorControl:AnchorItem.Header>

            <StackPanel>

                <CheckBox
                    Content="{Binding IsEnabledName}"
                    IsChecked="{Binding LyricIsEnabled}" />

                <CheckBox
                    Content="锁定"
                    IsChecked="{Binding LockLyricWindow}" />

                <CheckBox
                    Content="{Binding IsDoubleLineName}"
                    IsChecked="{Binding LyricIsDoubleLine}" />

                <CheckBox
                    Content="{Binding IsDualLangName}"
                    IsChecked="{Binding LyricConfig.DesktopLyric.LyricIsDualLang}" />

                <Panel>
                    <TextBlock Text="字体" VerticalAlignment="Center" />
                    <Button HorizontalAlignment="Right"
                            Content="{Binding LyricConfig.DesktopLyric.DesktopLyricsFont}"
                            Theme="{StaticResource ComboButton}">

                        <Button.Styles>

                            <Style Selector="Button:pressed">
                                <Setter Property="RenderTransform" Value="translateY(0px)" />
                            </Style>

                        </Button.Styles>

                        <Button.Flyout>
                            <Flyout>
                                <userControls:FontSelector
                                    SelectedFont="{Binding LyricConfig.DesktopLyric.DesktopLyricsFont}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Panel>

                <StackPanel Orientation="Horizontal" Spacing="10">

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding PositionXName}" Classes="Tertiary" />
                        <TextBlock Text="{Binding LyricConfig.DesktopLyric.Position.X,StringFormat=': {0} px'}"
                                   Classes="Tertiary" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding PositionYName}" Classes="Tertiary" />
                        <TextBlock Text="{Binding LyricConfig.DesktopLyric.Position.Y,StringFormat=': {0} px'}"
                                   Classes="Tertiary" />
                    </StackPanel>

                </StackPanel>

                <UniformGrid Columns="3" HorizontalAlignment="Left" ColumnSpacing="10" RowSpacing="10"
                             IsEnabled="{Binding LyricIsEnabled}">

                    <UniformGrid.Styles>

                        <Style Selector="Button">
                            <Setter Property="CornerRadius" Value="8" />
                            <Setter Property="Theme" Value="{DynamicResource OutlineButton}" />
                            <Setter Property="Command" Value="{Binding SetWindowPositionCommand}" />
                            <Setter Property="CommandParameter" Value="{Binding $self.Content}" />
                        </Style>

                    </UniformGrid.Styles>

                    <Button Content="↖" />
                    <Button Content="↑" />
                    <Button Content="↗" />
                    <Button Content="↙" />
                    <Button Content="↓" />
                    <Button Content="↘" />

                </UniformGrid>

                <Panel>
                    <TextBlock Text="歌词文本对齐方式" VerticalAlignment="Center" />
                    <ComboBox HorizontalAlignment="Right"
                              DisplayMemberBinding="{Binding Value}"
                              SelectedValueBinding="{Binding Key}"
                              ItemsSource="{x:Static configModels:LyricConfig.TextAlignments}"
                              SelectedValue="{Binding LyricConfig.DesktopLyric.LyricTextAlignment}" />
                </Panel>

                <TextBlock Text="歌词宽度" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                    Value="{Binding LyricWidth}" />

                <TextBlock Text="背景圆角" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="dip"
                                    Value="{Binding LyricConfig.DesktopLyric.CornerRadius}" />

                <TextBlock Text="歌词间距" />
                <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                    Name="LyricSpacingIntUpDown"
                                    Value="{Binding LyricConfig.DesktopLyric.LyricSpacing}" />

            </StackPanel>

        </anchorControl:AnchorItem>

        <anchorControl:AnchorItem>

            <anchorControl:AnchorItem.Header>
                <models:AnchorHeaderModel Name="样式" Describe="桌面歌词的样式设置" />
            </anchorControl:AnchorItem.Header>

            <StackPanel>

                <StackPanel.Styles>

                    <Style Selector="ColorView">
                        <Setter Property="ColorSpectrumShape" Value="Ring" />
                    </Style>

                </StackPanel.Styles>

                <Border HorizontalAlignment="Left" Theme="{StaticResource RadioButtonGroupBorder}" CornerRadius="8">

                    <StackPanel Orientation="Horizontal" Spacing="0">
                        <RadioButton Name="MainLyricConfig" Content="主歌词" IsChecked="True"
                                     Theme="{DynamicResource ButtonRadioButton}" />
                        <RadioButton Name="AltLyricConfig" Content="副歌词"
                                     Theme="{DynamicResource ButtonRadioButton}" />
                    </StackPanel>
                </Border>

                <ContentPresenter>
                    <Interaction.Behaviors>
                        <DataTrigger Binding="{Binding #MainLyricConfig.IsChecked}" Value="True">
                            <ChangeAvaloniaPropertyAction TargetProperty="{x:Static ContentPresenter.ContentProperty}">
                                <ChangeAvaloniaPropertyAction.Value>
                                    <StackPanel>

                                        <TextBlock Text="主歌词大小" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricMainFontSize}" />

                                        <TextBlock Text="主歌词翻译间距" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Maximum="{Binding #LyricSpacingIntUpDown.Value}"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricMainTranslateSpacing}" />

                                        <TextBlock Text="主歌词文本间距" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricMainLetterSpacing}" />

                                        <TextBlock Text="主歌词描边粗细" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Maximum="10"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricMainStrokeThickness}" />

                                    </StackPanel>
                                </ChangeAvaloniaPropertyAction.Value>
                            </ChangeAvaloniaPropertyAction>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding #AltLyricConfig.IsChecked}" Value="True">
                            <ChangeAvaloniaPropertyAction TargetProperty="{x:Static ContentPresenter.ContentProperty}">
                                <ChangeAvaloniaPropertyAction.Value>
                                    <StackPanel>

                                        <TextBlock Text="副歌词大小" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricAltFontSize}" />

                                        <TextBlock Text="副歌词翻译间距" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Maximum="{Binding #LyricSpacingIntUpDown.Value}"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricAltTranslateSping}" />

                                        <TextBlock Text="副歌词文本间距" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricAltLetterSpacing}" />

                                        <TextBlock Text="副歌词描边粗细" />
                                        <u:NumericIntUpDown Minimum="0" InnerRightContent="px" Maximum="10"
                                                            Value="{Binding LyricConfig.DesktopLyric.LyricAltStrokeThickness}" />
                                    </StackPanel>

                                </ChangeAvaloniaPropertyAction.Value>
                            </ChangeAvaloniaPropertyAction>
                        </DataTrigger>
                    </Interaction.Behaviors>
                </ContentPresenter>

                <StackPanel Orientation="Horizontal">

                    <TextBlock Text="背景颜色" VerticalAlignment="Center" />

                    <Button HorizontalAlignment="Right"
                            Width="50"
                            Theme="{StaticResource NoPointerButton}"
                            BorderBrush="{DynamicResource BorderCardBorderBrush}"
                            BorderThickness="2"
                            Height="30"
                            Background="{Binding LyricConfig.DesktopLyric.LyricBackground,Converter={StaticResource ToBrushConverter}}">
                        <Button.Flyout>
                            <Flyout Placement="Top">
                                <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricBackground}" />
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                </StackPanel>

                <StackPanel Spacing="20" Orientation="Vertical">

                    <StackPanel.Styles>

                        <Style Selector="Button">
                            <Setter Property="Padding" Value="8,5" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="CornerRadius" Value="8" />
                            <Setter Property="Theme" Value="{StaticResource NoPointerButton}" />
                        </Style>
                    </StackPanel.Styles>

                    <TextBlock Text="歌词颜色" VerticalAlignment="Center" />

                    <!-- 第一行 -->
                    <StackPanel Orientation="Horizontal" Spacing="20" Margin="3.5,0">

                        <!-- LyricMainTopColor -->
                        <Button
                            Background="{Binding LyricConfig.DesktopLyric.LyricMainTopColor, Converter={StaticResource ToBrushConverter}}"
                            BorderBrush="{Binding $self.Foreground}"
                            Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                            Content="{Binding LyricMainTopColorName}">
                            <Button.Effect>
                                <DropShadowEffect
                                    BlurRadius="8"
                                    Color="{Binding LyricConfig.DesktopLyric.LyricMainTopColor}"
                                    OffsetX="0"
                                    OffsetY="0" />
                            </Button.Effect>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricMainTopColor}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <!-- LyricMainBottomColor -->
                        <Button
                            Background="{Binding LyricConfig.DesktopLyric.LyricMainBottomColor, Converter={StaticResource ToBrushConverter}}"
                            BorderBrush="{Binding $self.Foreground}"
                            Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                            Content="{Binding LyricMainBottomColorName}">
                            <Button.Effect>
                                <DropShadowEffect
                                    BlurRadius="8"
                                    Color="{Binding LyricConfig.DesktopLyric.LyricMainBottomColor}"
                                    OffsetX="0"
                                    OffsetY="0" />
                            </Button.Effect>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricMainBottomColor}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <!-- LyricMainBorderColor -->
                        <Button
                            Background="{Binding LyricConfig.DesktopLyric.LyricMainBorderColor, Converter={StaticResource ToBrushConverter}}"
                            BorderBrush="{Binding $self.Foreground}"
                            Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                            Content="{Binding LyricMainBorderColorName}">
                            <Button.Effect>
                                <DropShadowEffect
                                    BlurRadius="8"
                                    Color="{Binding LyricConfig.DesktopLyric.LyricMainBorderColor}"
                                    OffsetX="0"
                                    OffsetY="0" />
                            </Button.Effect>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricMainBorderColor}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                    </StackPanel>

                    <!-- 第二行 -->
                    <StackPanel Orientation="Horizontal" Spacing="20" Margin="3.5">

                        <!-- LyricAltTopColor -->
                        <Button
                            Background="{Binding LyricConfig.DesktopLyric.LyricAltTopColor, Converter={StaticResource ToBrushConverter}}"
                            BorderBrush="{Binding $self.Foreground}"
                            Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                            Content="{Binding LyricAltTopColorName}">
                            <Button.Effect>
                                <DropShadowEffect
                                    BlurRadius="8"
                                    Color="{Binding LyricConfig.DesktopLyric.LyricAltTopColor}"
                                    OffsetX="0"
                                    OffsetY="0" />
                            </Button.Effect>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricAltTopColor}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <!-- LyricAltBottomColor -->
                        <Button
                            Background="{Binding LyricConfig.DesktopLyric.LyricAltBottomColor, Converter={StaticResource ToBrushConverter}}"
                            BorderBrush="{Binding $self.Foreground}"
                            Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                            Content="{Binding LyricAltBottomColorName}">
                            <Button.Effect>
                                <DropShadowEffect
                                    BlurRadius="8"
                                    Color="{Binding LyricConfig.DesktopLyric.LyricAltBottomColor}"
                                    OffsetX="0"
                                    OffsetY="0" />
                            </Button.Effect>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricAltBottomColor}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <!-- LyricAltBorderColor -->
                        <Button
                            Background="{Binding LyricConfig.DesktopLyric.LyricAltBorderColor, Converter={StaticResource ToBrushConverter}}"
                            BorderBrush="{Binding $self.Foreground}"
                            Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                            Content="{Binding LyricAltBorderColorName}">
                            <Button.Effect>
                                <DropShadowEffect
                                    BlurRadius="8"
                                    Color="{Binding LyricConfig.DesktopLyric.LyricAltBorderColor}"
                                    OffsetX="0"
                                    OffsetY="0" />
                            </Button.Effect>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricAltBorderColor}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>
                    </StackPanel>

                </StackPanel>


            </StackPanel>


        </anchorControl:AnchorItem>

    </anchorControl:Anchor>


</Grid>