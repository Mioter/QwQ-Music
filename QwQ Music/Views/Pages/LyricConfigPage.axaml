<UserControl
    x:Class="QwQ_Music.Views.Pages.LyricConfigPage"
    x:DataType="pages:LyricConfigPageViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:u="https://irihi.tech/ursa"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:pages="clr-namespace:QwQ_Music.ViewModels.Pages"
    xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls.ColorPicker"
    xmlns:converters1="clr-namespace:Avalonia.Controls.Primitives.Converters;assembly=Avalonia.Controls.ColorPicker"
    xmlns:configModels="clr-namespace:QwQ_Music.Models.ConfigModels">

    <UserControl.Resources>
        <converters:ToBrushConverter x:Key="ToBrushConverter" />
        <converters1:ContrastBrushConverter x:Key="ContrastBrushConverter" />
    </UserControl.Resources>

    <UserControl.Styles>

        <Style Selector="ColorView">
            <Setter Property="ColorSpectrumShape" Value="Ring" />
        </Style>

        <Style Selector="StackPanel">
            <Setter Property="Spacing" Value="10" />
        </Style>

    </UserControl.Styles>

    <ScrollViewer
        Margin="10"
        VerticalScrollBarVisibility="Auto">

        <StackPanel Margin="0,0,10,0">

            <Expander Header="滚动歌词" IsExpanded="{Binding LyricConfig.IsExpandedRolledLyricConfig}">

                <StackPanel>
                    <Panel>
                        <TextBlock Text="歌词文本对齐方式" VerticalAlignment="Center" />
                        <ComboBox
                            Width="80"
                            HorizontalAlignment="Right"
                            ItemsSource="{x:Static configModels:LyricConfig.TextAlignments}"
                            SelectedItem="{Binding LyricConfig.RolledLyric.LyricTextAlignment}" />
                    </Panel>

                    <CheckBox Content="显示翻译" IsChecked="{Binding LyricConfig.RolledLyric.ShowTranslation}" />

                </StackPanel>

            </Expander>

            <Expander Header="桌面歌词" IsExpanded="{Binding LyricConfig.IsExpandedDesktopLyricConfig}">

                <StackPanel>

                    <CheckBox
                        Content="{Binding IsEnabledName}"
                        IsChecked="{Binding LyricIsEnabled}" />

                    <CheckBox
                        Content="锁定"
                        IsChecked="{Binding LockLyricWindow}" />

                    <CheckBox
                        Content="{Binding IsDoubleLineName}"
                        IsChecked="{Binding LyricIsDoubleLine}" />

                    <CheckBox
                        Content="{Binding IsDualLangName}"
                        IsChecked="{Binding LyricConfig.DesktopLyric.LyricIsDualLang}" />

                    <StackPanel Orientation="Horizontal" Spacing="10">

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding PositionXName}" Classes="Tertiary" />
                            <TextBlock Text="{Binding LyricConfig.DesktopLyric.Position.X,StringFormat=': {0} px'}"
                                       Classes="Tertiary" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding PositionYName}" Classes="Tertiary" />
                            <TextBlock Text="{Binding LyricConfig.DesktopLyric.Position.Y,StringFormat=': {0} px'}"
                                       Classes="Tertiary" />
                        </StackPanel>

                    </StackPanel>

                    <UniformGrid Columns="3" HorizontalAlignment="Left" ColumnSpacing="10" RowSpacing="10">

                        <UniformGrid.Styles>

                            <Style Selector="Button">
                                <Setter Property="CornerRadius" Value="8"/>
                                <Setter Property="Theme" Value="{DynamicResource OutlineButton}" />
                                <Setter Property="Command" Value="{Binding SetWindowPositionCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding $self.Content}" />
                            </Style>

                        </UniformGrid.Styles>

                        <Button Content="↖" />
                        <Button Content="↑" />
                        <Button Content="↗" />
                        <Button Content="↙" />
                        <Button Content="↓" />
                        <Button Content="↘" />

                    </UniformGrid>
                    
                    <Panel>
                        <TextBlock Text="歌词文本对齐方式" VerticalAlignment="Center" />

                        <ComboBox
                            Width="80"
                            HorizontalAlignment="Right"
                            ItemsSource="{x:Static configModels:LyricConfig.TextAlignments}"
                            SelectedItem="{Binding LyricConfig.DesktopLyric.LyricTextAlignment}" />
                    </Panel>

                    <TextBlock Text="歌词宽度" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Value="{Binding LyricWidth}" />
                    
                    <TextBlock Text="背景圆角" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="dip"
                                        Value="{Binding LyricConfig.DesktopLyric.CornerRadius}" />
                    
                    <TextBlock Text="歌词间距" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Name="LyricSpacingIntUpDown"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricSpacing}" />

                    <TextBlock Text="主歌词大小" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricMainFontSize}" />

                    <TextBlock Text="主歌词翻译间距" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Maximum="{Binding #LyricSpacingIntUpDown.Value}"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricMainTranslateSpacing}" />

                    <TextBlock Text="主歌词文本间距" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricMainLetterSpacing}" />

                    <TextBlock Text="主歌词描边粗细" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Maximum="10"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricMainStrokeThickness}" />

                    <TextBlock Text="副歌词大小" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricAltFontSize}" />

                    <TextBlock Text="副歌词翻译间距" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Maximum="{Binding #LyricSpacingIntUpDown.Value}"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricAltTranslateSping}" />

                    <TextBlock Text="副歌词文本间距" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricAltLetterSpacing}" />

                    <TextBlock Text="副歌词描边粗细" />
                    <u:NumericIntUpDown Minimum="0" InnerRightContent="px" Maximum="10"
                                        Value="{Binding LyricConfig.DesktopLyric.LyricAltStrokeThickness}" />

                    <StackPanel Spacing="20" Margin="0,10">

                        <StackPanel.Styles>

                            <Style Selector="WrapPanel">
                                <Setter Property="ItemSpacing" Value="20" />
                                <Setter Property="LineSpacing" Value="20" />
                            </Style>

                            <Style Selector="Button">
                                <Setter Property="Padding" Value="8,5" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="CornerRadius" Value="8" />
                                <Setter Property="Theme" Value="{StaticResource NoPointer}" />
                            </Style>
                        </StackPanel.Styles>

                        <StackPanel Orientation="Horizontal">

                            <TextBlock Text="背景颜色" VerticalAlignment="Center" />

                            <Button HorizontalAlignment="Right"
                                    Width="50"
                                    BorderBrush="{DynamicResource BorderCardBorderBrush}"
                                    BorderThickness="2"
                                    Height="30"
                                    Background="{Binding LyricConfig.DesktopLyric.LyricBackground,Converter={StaticResource ToBrushConverter}}">
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricBackground}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                        </StackPanel>

                        <!-- 第一行 -->
                        <WrapPanel>
                            <!-- LyricMainTopColor -->
                            <Button
                                Background="{Binding LyricConfig.DesktopLyric.LyricMainTopColor, Converter={StaticResource ToBrushConverter}}"
                                BorderBrush="{Binding $self.Foreground}"
                                Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                                Content="{Binding LyricMainTopColorName}">
                                <Button.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Color="{Binding LyricConfig.DesktopLyric.LyricMainTopColor}"
                                        OffsetX="0"
                                        OffsetY="0" />
                                </Button.Effect>
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricMainTopColor}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <!-- LyricMainBottomColor -->
                            <Button
                                Background="{Binding LyricConfig.DesktopLyric.LyricMainBottomColor, Converter={StaticResource ToBrushConverter}}"
                                BorderBrush="{Binding $self.Foreground}"
                                Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                                Content="{Binding LyricMainBottomColorName}">
                                <Button.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Color="{Binding LyricConfig.DesktopLyric.LyricMainBottomColor}"
                                        OffsetX="0"
                                        OffsetY="0" />
                                </Button.Effect>
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricMainBottomColor}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <!-- LyricMainBorderColor -->
                            <Button
                                Background="{Binding LyricConfig.DesktopLyric.LyricMainBorderColor, Converter={StaticResource ToBrushConverter}}"
                                BorderBrush="{Binding $self.Foreground}"
                                Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                                Content="{Binding LyricMainBorderColorName}">
                                <Button.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Color="{Binding LyricConfig.DesktopLyric.LyricMainBorderColor}"
                                        OffsetX="0"
                                        OffsetY="0" />
                                </Button.Effect>
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricMainBorderColor}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </WrapPanel>

                        <!-- 第二行 -->
                        <WrapPanel>
                            <!-- LyricAltTopColor -->
                            <Button
                                Background="{Binding LyricConfig.DesktopLyric.LyricAltTopColor, Converter={StaticResource ToBrushConverter}}"
                                BorderBrush="{Binding $self.Foreground}"
                                Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                                Content="{Binding LyricAltTopColorName}">
                                <Button.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Color="{Binding LyricConfig.DesktopLyric.LyricAltTopColor}"
                                        OffsetX="0"
                                        OffsetY="0" />
                                </Button.Effect>
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricAltTopColor}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <!-- LyricAltBottomColor -->
                            <Button
                                Background="{Binding LyricConfig.DesktopLyric.LyricAltBottomColor, Converter={StaticResource ToBrushConverter}}"
                                BorderBrush="{Binding $self.Foreground}"
                                Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                                Content="{Binding LyricAltBottomColorName}">
                                <Button.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Color="{Binding LyricConfig.DesktopLyric.LyricAltBottomColor}"
                                        OffsetX="0"
                                        OffsetY="0" />
                                </Button.Effect>
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricAltBottomColor}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <!-- LyricAltBorderColor -->
                            <Button
                                Background="{Binding LyricConfig.DesktopLyric.LyricAltBorderColor, Converter={StaticResource ToBrushConverter}}"
                                BorderBrush="{Binding $self.Foreground}"
                                Foreground="{Binding $self.Background, Converter={StaticResource ContrastBrushConverter}}"
                                Content="{Binding LyricAltBorderColorName}">
                                <Button.Effect>
                                    <DropShadowEffect
                                        BlurRadius="8"
                                        Color="{Binding LyricConfig.DesktopLyric.LyricAltBorderColor}"
                                        OffsetX="0"
                                        OffsetY="0" />
                                </Button.Effect>
                                <Button.Flyout>
                                    <Flyout Placement="Top">
                                        <ColorView Color="{Binding LyricConfig.DesktopLyric.LyricAltBorderColor}" />
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </WrapPanel>

                    </StackPanel>

                </StackPanel>

            </Expander>
        </StackPanel>

    </ScrollViewer>
</UserControl>