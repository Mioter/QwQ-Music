<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:behaviors="clr-namespace:QwQ_Music.Helper.Behaviors"
             xmlns:userControls="clr-namespace:QwQ_Music.Views.UserControls"
             xmlns:pages="clr-namespace:QwQ_Music.ViewModels.Pages"
             xmlns:u="https://irihi.tech/ursa"
             xmlns:models="clr-namespace:QwQ_Music.Models"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="pages:ViewMusicListPageViewModel"
             x:Class="QwQ_Music.Views.Pages.ViewMusicListPage">

    <Grid RowDefinitions="Auto,*" RowSpacing="10" Margin="10,5">

        <Panel>

            <Panel.Styles>
                <Style Selector="Panel > StackPanel">
                    <Setter Property="Spacing" Value="8" />
                    <Setter Property="Orientation" Value="Horizontal" />
                </Style>
            </Panel.Styles>

            <StackPanel>

                <u:Avatar CornerRadius="12" Height="25" Background="{DynamicResource SemiColorPrimaryLight}"
                          Content="歌单" Foreground="{DynamicResource SemiColorPrimary}" />

                <TextBlock FontWeight="Bold" VerticalAlignment="Center" Text="{Binding MusicListModel.Name}"
                           FontSize="16" />

            </StackPanel>

            <StackPanel
                HorizontalAlignment="Right">

                <StackPanel.Styles>

                    <Style Selector="u|IconButton">
                        <Setter Property="CornerRadius" Value="8" />
                        <Setter Property="Background" Value="Transparent" />
                    </Style>

                    <Style Selector="PathIcon">
                        <Setter Property="Margin" Value="5" />
                    </Style>

                </StackPanel.Styles>

                <TextBox
                    CornerRadius="15"
                    HorizontalAlignment="Left"
                    Text="{Binding SearchText, Mode=TwoWay}"
                    Watermark="搜索音乐"
                    Width="200" />

                <Button
                    Classes="Icon"
                    CornerRadius="8"
                    Command="{Binding MusicPlayerViewModel.TogglePlaylistCommand}"
                    CommandParameter="{Binding MusicListModel}"
                    Height="32" Width="32"
                    Padding="2">
                    <PathIcon Data="{StaticResource PlayIconData}" Margin="0" />
                </Button>

                <u:IconButton Command="{Binding}" Icon="{StaticResource SemiIconPlus}" />

                <u:IconButton
                    Command="{Binding SelectedCurrentMusicItemCommand}"
                    Icon="{StaticResource SemiIconAlignCenterVertical}"
                    ToolTip.Tip="跳转当前音乐" />

                <u:IconButton Icon="{StaticResource SemiIconMore}" ToolTip.Tip="更多">

                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Spacing="5">
                                <CheckBox Content="备注" Name="MoreColumn1" />
                                <CheckBox Content="大小" Name="MoreColumn2" />
                                <CheckBox Content="附注" Name="MoreColumn3" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>

                </u:IconButton>

            </StackPanel>

        </Panel>

        <ScrollViewer Grid.Row="1">

            <StackPanel>

                <Border BorderThickness="1" CornerRadius="12"
                        BorderBrush="{DynamicResource BorderCardBorderBrush}">

                    <SelectableTextBlock
                        TextWrapping="Wrap"
                        MaxLines="5"
                        LetterSpacing="1"
                        LineSpacing="1"
                        Margin="10"
                        Text="{Binding MusicListModel.Description,Mode=TwoWay}" />

                </Border>

                <DataGrid
                    Name="DataGrid"
                    Background="Transparent"
                    CanUserReorderColumns="True"
                    CanUserResizeColumns="True"
                    CanUserSortColumns="True"
                    SelectedItem="{Binding SelectedItem}"
                    IsReadOnly="True"
                    ItemsSource="{Binding MusicItems}"
                    behaviors:ScrollToItemBehavior.ScrollToItem="{Binding SelectedItem}">

                    <DataGrid.Styles>

                        <Style Selector="DataGridRow">
                            <!--<Setter Property="(Interaction.Behaviors)">
                                <BehaviorCollectionTemplate>
                                    <BehaviorCollection>
                                        <PointerWheelChangedTrigger>
                                            <InvokeCommandAction
                                                Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).DataGridRowPointerWheelChangedCommand}"
                                                PassEventArgsToCommand="True" />
                                        </PointerWheelChangedTrigger>
                                    </BehaviorCollection>
                                </BehaviorCollectionTemplate>
                            </Setter>-->
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>

                                        <MenuItem
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.PlaySpecifiedMusicCommand}"
                                            CommandParameter="{Binding}"
                                            Header="立即播放">
                                            <MenuItem.Icon>
                                                <PathIcon Data="{StaticResource SemiIconPlay}" Margin="2" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem
                                            Header="添加到">
                                            <MenuItem.Icon>
                                                <PathIcon
                                                    Data="{StaticResource SemiIconCopyAdd}"
                                                    Margin="1.5" />
                                            </MenuItem.Icon>

                                            <MenuItem
                                                Header="已有歌单"
                                                IsVisible="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.MusicListsViewModel.PlayListItems.Count}"
                                                ItemsSource="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.MusicListsViewModel.PlayListItems}">

                                                <MenuItem.ItemContainerTheme>
                                                    <ControlTheme TargetType="MenuItem"
                                                                  x:DataType="models:MusicListModel"
                                                                  BasedOn="{StaticResource BigIconMenuItem}">
                                                        <Setter Property="Header" Value="{Binding Name}" />
                                                        <Setter Property="Command"
                                                                Value="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).AddToMusicListCommand}" />
                                                        <Setter Property="CommandParameter" Value="{Binding Name}" />
                                                        <Setter Property="Icon">
                                                            <Template>
                                                                <Border CornerRadius="6">

                                                                    <Border.Effect>
                                                                        <DropShadowEffect
                                                                            BlurRadius="10"
                                                                            Color="LightGray"
                                                                            OffsetX="0"
                                                                            OffsetY="0"
                                                                            Opacity="0.5" />
                                                                    </Border.Effect>

                                                                    <Border CornerRadius="6" ClipToBounds="True">
                                                                        <Image
                                                                            Height="30" Width="30"
                                                                            Source="{Binding CoverImage}" />
                                                                    </Border>
                                                                </Border>
                                                            </Template>
                                                        </Setter>
                                                    </ControlTheme>
                                                </MenuItem.ItemContainerTheme>

                                            </MenuItem>

                                            <Separator
                                                Margin="0,5"
                                                IsVisible="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.MusicListsViewModel.PlayListItems.Count}" />

                                            <MenuItem Header="下一首"
                                                      Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.AddToCurrentPlaylistNextItemCommand}"
                                                      CommandParameter="{Binding $parent[DataGrid].SelectedItems}">
                                                <MenuItem.Icon>
                                                    <PathIcon Data="{StaticResource SemiIconTriangleDown}" Margin="2" />
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem Header="新建歌单"
                                                      Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.MusicListsViewModel.CreateAndAddToMusicListCommand}"
                                                      CommandParameter="{Binding $parent[DataGrid].SelectedItems}">
                                                <MenuItem.Icon>
                                                    <PathIcon Data="{StaticResource SemiIconMusic}" Margin="2" />
                                                </MenuItem.Icon>
                                            </MenuItem>

                                        </MenuItem>

                                        <MenuItem
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.SetZeroToCurrentPointerCommand}"
                                            CommandParameter="{Binding}"
                                            Header="清空播放时长">
                                            <MenuItem.Icon>
                                                <PathIcon Data="{StaticResource ClearEmpty}" Margin="2" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).RemoveToMusicListCommand}"
                                            CommandParameter="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicListModel.Name}"
                                            Header="移出歌单">
                                            <MenuItem.Icon>
                                                <PathIcon Data="{StaticResource SemiIconForward}" Margin="2"
                                                          Foreground="{StaticResource SemiRed4Color}"
                                                          RenderTransform="rotate(180deg)" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <MenuItem
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.ShowDialogCommand}"
                                            CommandParameter="{Binding}"
                                            Header="详细信息">
                                            <MenuItem.Icon>
                                                <PathIcon Data="{StaticResource SemiIconArticle}" Margin="2" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <!--  在文件中打开  -->
                                        <MenuItem
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.OpenInExplorerCommand}"
                                            CommandParameter="{Binding}"
                                            Header="在文件中打开">
                                            <MenuItem.Icon>
                                                <PathIcon Data="{StaticResource SemiIconFolder}" Margin="2" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                        <!--  删除  -->
                                        <MenuItem
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).DeleteMusicItemsCommand}"
                                            CommandParameter="{Binding $parent[DataGrid].SelectedItems}"
                                            Header="删除音乐">
                                            <MenuItem.Icon>
                                                <PathIcon Data="{StaticResource SemiIconDelete}" Margin="1"
                                                          Foreground="{StaticResource SemiRed4Color}" />
                                            </MenuItem.Icon>
                                        </MenuItem>

                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!--
                        <Style Selector="DataGrid /template/ DataGridColumnHeader#PART_TopLeftCornerHeader /template/ Border">
                            <Setter Property="Opacity" Value="0" />
                        </Style>
                        -->

                        <Style Selector="DataGridColumnHeadersPresenter &gt; DataGridColumnHeader">
                            <Setter Property="Theme" Value="{StaticResource NoDecorativeThread}" />
                        </Style>

                        <Style Selector="DataGrid /template/ Rectangle#PART_ColumnHeadersAndRowsSeparator">
                            <Setter Property="Opacity" Value="0" />
                        </Style>

                        <!--<Style Selector="DataGridRowHeader /template/ Grid">
                                <Setter Property="Opacity" Value="0" />
                            </Style>-->

                        <Style Selector="DataGridRow:pointerover /template/ Border#BackgroundBorder">
                            <Setter Property="CornerRadius" Value="10" />
                        </Style>

                        <Style Selector="DataGridRow:selected /template/ Border#BackgroundBorder">
                            <Setter Property="CornerRadius" Value="10" />
                        </Style>

                        <Style Selector="DataGridCell:current /template/ Rectangle#CurrencyVisual">
                            <Setter Property="Opacity" Value="0" />
                        </Style>

                        <Style Selector="DataGridCell:focus /template/ Panel#FocusVisual">
                            <Setter Property="Opacity" Value="0" />
                        </Style>

                    </DataGrid.Styles>

                    <DataGrid.Columns>

                        <DataGridTemplateColumn SortMemberPath="Title" Width="1*">

                            <DataGridTemplateColumn.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="歌曲" />
                                    <TextBlock
                                        Classes="Tertiary"
                                        FontSize="12"
                                        Text=" / 演唱者"
                                        VerticalAlignment="Bottom" />
                                </StackPanel>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">

                                        <!--  ReSharper disable Xaml.PossibleNullReferenceException  -->
                                        <userControls:MusicAlbumButton
                                            Command="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.PlaySpecifiedMusicCommand}"
                                            CommandParameter="{Binding}"
                                            CornerRadius="8"
                                            CurrentMusicItem="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.CurrentMusicItem}"
                                            ExternalMouseTouch="{Binding $parent[DataGridRow].IsPointerOver}"
                                            IsPlaying="{Binding $parent[UserControl].((pages:ViewMusicListPageViewModel)DataContext).MusicPlayerViewModel.IsPlaying}">
                                            <!--  ReSharper restore Xaml.PossibleNullReferenceException  -->
                                            <Button.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="10"
                                                    Color="DarkGray"
                                                    OffsetX="0"
                                                    OffsetY="0"
                                                    Opacity="0.5" />
                                            </Button.Effect>
                                        </userControls:MusicAlbumButton>

                                        <StackPanel Spacing="5" VerticalAlignment="Center">
                                            <TextBlock FontWeight="Bold" Text="{Binding Title}" />
                                            <TextBlock
                                                Classes="Tertiary"
                                                FontSize="12"
                                                Text="{Binding Artists}" />
                                        </StackPanel>

                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            Binding="{Binding Album}"
                            Header="专辑"
                            Width="1*" />

                        <DataGridTextColumn Header="备注"
                                            MinWidth="100"
                                            MaxWidth="200"
                                            IsVisible="{Binding ElementName=MoreColumn1,Path=IsChecked}"
                                            Binding="{Binding Comment}" />

                        <DataGridTemplateColumn Header="时长" MinWidth="120">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Spacing="5" Margin="10,0" VerticalAlignment="Center">
                                        <TextBlock
                                            Text="{Binding Duration, Mode=OneWay, Converter={StaticResource TruncateDecimalConverter}}" />

                                        <TextBlock
                                            Classes="Tertiary"
                                            FontSize="12"
                                            Text="{Binding Current, Mode=OneWay, Converter={StaticResource TruncateDecimalConverter}, StringFormat='已播放到 : {0}'}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            Binding="{Binding FileSize}"
                            Header="大小"
                            IsVisible="{Binding IsChecked, ElementName=MoreColumn2}"
                            MinWidth="100" />

                        <DataGridTextColumn
                            Binding="{Binding Remarks}"
                            Header="附注"
                            MaxWidth="200"
                            IsVisible="{Binding IsChecked, ElementName=MoreColumn3}"
                            MinWidth="100" />

                    </DataGrid.Columns>

                    <Interaction.Behaviors>

                        <DoubleTappedTrigger>
                            <InvokeCommandAction Command="{Binding ToggleMusicCommand}" />
                        </DoubleTappedTrigger>

                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static DataGrid.SelectionChangedEvent}">
                            <InvokeCommandAction
                                Command="{Binding SelectedItemChangedCommand}"
                                CommandParameter="{Binding $parent[DataGrid].SelectedItems}" />
                        </RoutedEventTriggerBehavior>

                    </Interaction.Behaviors>

                </DataGrid>
            </StackPanel>


        </ScrollViewer>

    </Grid>

</UserControl>