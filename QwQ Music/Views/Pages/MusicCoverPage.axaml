<UserControl
    x:Class="QwQ_Music.Views.Pages.MusicCoverPage"
    x:DataType="pages:MusicCoverPageViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:behaviors="clr-namespace:QwQ_Music.Helper.Behaviors"
    xmlns:control="clr-namespace:QwQ.Avalonia.Control;assembly=QwQ.Avalonia.Control"
    xmlns:controls="clr-namespace:QwQ_Music.Controls"
    xmlns:u="https://irihi.tech/ursa"
    xmlns:userControls="clr-namespace:QwQ_Music.Views.UserControls"
    xmlns:viewModels="clr-namespace:QwQ_Music.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:pages="clr-namespace:QwQ_Music.ViewModels.Pages"
    xmlns:enums="clr-namespace:QwQ_Music.Definitions.Enums"
    xmlns:configModels="clr-namespace:QwQ_Music.Models.ConfigModels">
    
    <ThemeVariantScope RequestedThemeVariant="{Binding ThemeVariant}">

        <ThemeVariantScope.Styles>

            <Style Selector="TextBlock">
                <Setter Property="FontFamily" Value="{StaticResource Cjtw85}"/>
                <Setter Property="Transitions">
                    <Transitions>
                        <BrushTransition Duration="0:0:0.3" Easing="QuadraticEaseIn" Property="Foreground"/>
                    </Transitions>
                </Setter>
            </Style>
            
            <Style Selector="PathIcon">
                <Setter Property="Transitions">
                    <Transitions>
                        <BrushTransition Duration="0:0:0.15" Easing="QuadraticEaseIn" Property="Foreground"/>
                    </Transitions>
                </Setter>
            </Style>
            
            <Style Selector=":is(Button)">
                <Setter Property="Transitions">
                    <Transitions>
                        <BrushTransition Duration="0:0:0.15" Easing="QuadraticEaseIn" Property="Foreground"/>
                    </Transitions>
                </Setter>
            </Style>
            
        </ThemeVariantScope.Styles>
        
        <Panel>

            <Panel.Styles>
                <Style Selector="u|IconButton">
                    <Setter Property="CornerRadius" Value="8" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </Panel.Styles>

            <controls:ShaderEffectControl
                Colors="{Binding ColorsList}"
                IsEnableAnimation="{Binding IsShaderAnimationEnabled}"
                PerformanceMode="HighQuality"
                ShaderCode="{Binding ShaderCode}" />

            <!--  内容层  -->
            <Grid RowDefinitions="40,*,Auto,Auto">

                <u:IconButton
                    Command="{Binding $parent[Window].((viewModels:MainWindowViewModel)DataContext).ShowMusicPlayerPageCommand}"
                    Height="30"
                    Icon="{StaticResource SemiIconChevronDown}"
                    Margin="5"
                    Width="30" />

                <Grid ColumnDefinitions="*,*" Grid.Row="1">

                    <Grid
                        HorizontalAlignment="Center"
                        Margin="50,20,10,20"
                        RowDefinitions="*,Auto"
                        RowSpacing="10"
                        VerticalAlignment="Center">
                        <Border
                            BoxShadow="0 0 5 0 DarkGray"
                            CornerRadius="20"
                            HorizontalAlignment="Center">
                            <Border ClipToBounds="True" CornerRadius="{Binding $parent[Border].CornerRadius}">
                                <!--  专辑封面 Image 控件  -->
                                <Image Source="{Binding CoverImage}" />
                            </Border>
                        </Border>

                        <!--  音乐信息  -->
                        <StackPanel
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            Margin="10,0"
                            Spacing="5">

                            <TextBlock
                                FontSize="18"
                                FontWeight="Bold"
                                Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Title}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip.Tip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                            <TextBlock
                                Classes="Tertiary"
                                FontSize="15"
                                Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Artists}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip.Tip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />

                        </StackPanel>

                    </Grid>

                    <controls:LyricsControl
                        ClickedLyricTime="{Binding SelectLyricsTimePoint}"
                        CurrentLyricIndex="{Binding MusicPlayerViewModel.LyricsModel.LyricsIndex}"
                        Grid.Column="1"
                        Margin="10,20"
                        LyricTextAlignment="{Binding RolledLyric.LyricTextAlignment}"
                        LyricsData="{Binding MusicPlayerViewModel.LyricsModel.LyricsData}"
                        ShowTranslation="{Binding RolledLyric.ShowTranslation}"
                        TextMargin="30,10"
                        TranslationSpacing="5">
                    
                    </controls:LyricsControl>

                </Grid>

                <Grid
                    ColumnDefinitions="1*,3*,1*"
                    Grid.Row="2"
                    Margin="20">

                    <!--  播放控制  -->
                    <StackPanel
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="30"
                        VerticalAlignment="Bottom">

                        <StackPanel.Styles>
                            <Style Selector="StackPanel > Button">
                                <Setter Property="Padding" Value="0" />
                            </Style>
                        </StackPanel.Styles>

                        <!--  刷新播放  -->
                        <Button
                            Classes="Icon"
                            Command="{Binding MusicPlayerViewModel.RefreshCurrentMusicItemCommand}"
                            Foreground="{DynamicResource TextBlockDefaultForeground}"
                            Height="25"
                            IsEnabled="{Binding MusicPlayerViewModel.CurrentMusicItem.FilePath, Converter={x:Static ObjectConverters.NotEqual}, ConverterParameter=''}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True">
                            <PathIcon Data="{StaticResource SemiIconRefresh2}" Margin="5" />
                        </Button>

                        <!--  上一首  -->
                        <Button
                            Classes="Icon"
                            Command="{Binding MusicPlayerViewModel.TogglePreviousSongCommand}"
                            Foreground="{DynamicResource TextBlockDefaultForeground}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True">
                            <PathIcon
                                Data="{StaticResource PlayIconData}"
                                Height="30"
                                RenderTransform="rotate(180deg)" />
                        </Button>

                        <!--  播放/暂停 按钮  -->
                        <userControls:MusicPlayButton />

                        <!--  下一首  -->
                        <Button
                            Classes="Icon"
                            Command="{Binding MusicPlayerViewModel.ToggleNextSongCommand}"
                            Foreground="{DynamicResource TextBlockDefaultForeground}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True">
                            <PathIcon Data="{StaticResource PlayIconData}"
                                      Height="30" />
                        </Button>

                        <!--  播放模式  -->
                        <Button
                            Classes="Icon"
                            Command="{Binding MusicPlayerViewModel.TogglePlayModeCommand}"
                            Foreground="{DynamicResource TextBlockDefaultForeground}"
                            Height="25"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="{Binding MusicPlayerViewModel.PlayModeName}"
                            ToolTip.VerticalOffset="-10"
                            behaviors:DynamicCornerBehavior.IsEnabled="True">
                            <control:ChoiceControl Selected="{Binding MusicPlayerViewModel.PlayerConfig.PlayMode}"
                                                   TargetType="{x:Type enums:PlayMode}">
                                <PathIcon
                                    Data="{StaticResource Sequential}"
                                    Margin="3.6"
                                    control:ChoiceControl.SelectName="Sequential" />

                                <PathIcon
                                    Data="{StaticResource Random}"
                                    Margin="4.8"
                                    control:ChoiceControl.SelectName="Random" />

                                <PathIcon
                                    Data="{StaticResource SingleLoop}"
                                    Margin="4"
                                    control:ChoiceControl.SelectName="SingleLoop" />
                            </control:ChoiceControl>
                        </Button>

                    </StackPanel>

                    <StackPanel
                        Grid.Column="2"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Spacing="10"
                        VerticalAlignment="Center">

                        <StackPanel.Styles>

                            <Style Selector="StackPanel > Button">
                                <Setter Property="Height" Value="30" />
                                <Setter Property="Width" Value="30" />
                                <Setter Property="Padding" Value="8" />
                                <Setter Property="Foreground" Value="{DynamicResource TextBlockDefaultForeground}" />
                                <Setter Property="behaviors:DynamicCornerBehavior.IsEnabled" Value="True" />
                            </Style>

                        </StackPanel.Styles>

                        <Button
                            Classes="Icon"
                            ToolTip.Placement="Top"
                            ToolTip.VerticalOffset="-10">

                            <Button.Styles>
                                <Style Selector="PathIcon.Half">
                                    <Setter Property="Data" Value="{StaticResource SemiIconVolume1}" />
                                </Style>

                                <Style Selector="PathIcon.Full">
                                    <Setter Property="Data" Value="{StaticResource SemiIconVolume2}" />
                                </Style>

                                <Style Selector="PathIcon.Empty">
                                    <Setter Property="Data" Value="" />
                                </Style>

                            </Button.Styles>

                            <PathIcon
                                Height="15"
                                Classes.Half="{Binding MusicPlayerViewModel.Volume,Converter={StaticResource ValueComparisonConverter},
                                ConverterParameter='@VALUE > 0'}"
                                Classes.Full="{Binding MusicPlayerViewModel.Volume,Converter={StaticResource ValueComparisonConverter},
                                                                                                  ConverterParameter='@VALUE > 50'}"
                                Classes.Empty="{Binding MusicPlayerViewModel.Volume,Converter={StaticResource ValueComparisonConverter},
                                                                                                                                 ConverterParameter='@VALUE == 50'}" />

                            <Button.Flyout>
                                <Flyout Placement="Top" ShowMode="TransientWithDismissOnPointerMoveAway">

                                    <Grid
                                        Height="180"
                                        Margin="0,5,0,0"
                                        RowDefinitions="Auto,*,Auto">

                                        <TextBlock
                                            FontSize="12"
                                            FontWeight="Bold"
                                            HorizontalAlignment="Center"
                                            Margin="0,0,0,3"
                                            Text="{Binding MusicPlayerViewModel.Volume}" />

                                        <Slider
                                            Grid.Row="1"
                                            HorizontalAlignment="Center"
                                            Maximum="100"
                                            Orientation="Vertical"
                                            Value="{Binding MusicPlayerViewModel.Volume}" />

                                        <Button
                                            Classes="Icon"
                                            Classes.Silent="{Binding MusicPlayerViewModel.IsMuted}"
                                            Command="{Binding MusicPlayerViewModel.ToggleMuteModeCommand}"
                                            CornerRadius="8"
                                            Grid.Row="2"
                                            Margin="8"
                                            Padding="0">

                                            <PathIcon Data="{StaticResource Prohibit}" Width="25" />

                                            <Button.Styles>
                                                <Style Selector="Button.Silent">
                                                    <Setter Property="Background"
                                                            Value="{StaticResource SemiRed5Color}" />
                                                    <Setter Property="Foreground" Value="White" />
                                                    <Style Selector="^:pointerover /template/ ContentPresenter">
                                                        <Setter Property="Background"
                                                                Value="{StaticResource SemiRed4Color}" />
                                                    </Style>
                                                </Style>
                                            </Button.Styles>

                                            <Interaction.Behaviors>

                                                <PointerWheelChangedTrigger>
                                                    <InvokeCommandAction
                                                        Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                                        PassEventArgsToCommand="True" />
                                                </PointerWheelChangedTrigger>

                                            </Interaction.Behaviors>

                                        </Button>

                                    </Grid>
                                </Flyout>
                            </Button.Flyout>

                            <ToolTip.Tip>

                            <control:SwitchControl Condition="{Binding MusicPlayerViewModel.Volume,Mode=OneWay}">
                                <control:SwitchControl.TrueContent>
                                    <TextBlock FontSize="12">
                                        <Run Text="当前音量：" />
                                        <Run Text="{Binding MusicPlayerViewModel.Volume}" />
                                        <Run Text="%" />
                                    </TextBlock>
                                </control:SwitchControl.TrueContent>
                                <control:SwitchControl.FalseContent>
                                    <TextBlock
                                        FontSize="12"
                                        Text="静音" />
                                </control:SwitchControl.FalseContent>
                            </control:SwitchControl>

                        </ToolTip.Tip>

                        <Interaction.Behaviors>

                            <PointerWheelChangedTrigger>
                                <InvokeCommandAction Command="{Binding VolumeBarPointerWheelChangedCommand}" PassEventArgsToCommand="True" />
                            </PointerWheelChangedTrigger>

                        </Interaction.Behaviors>

                    </Button>

                        <Button
                            Classes="Icon">
                            <PathIcon
                                Data="{StaticResource SemiIconTextRectangle}" />


                            <Button.Flyout>
                                <Flyout Placement="Top" ShowMode="TransientWithDismissOnPointerMoveAway">
                                    <StackPanel
                                        Margin="5"
                                        MinWidth="120"
                                        Spacing="10">

                                        <TextBlock
                                            Text="{Binding OffsetName}" />
                                        <u:NumericIntUpDown InnerRightContent="ms"
                                                            MinHeight="30"
                                                            Value="{Binding MusicPlayerViewModel.LyricOffset}" />

                                        <TextBlock Text="歌词文本对齐方式" VerticalAlignment="Center" />
                                        <ComboBox
                                            Width="100"
                                            MinHeight="30"
                                            ItemsSource="{x:Static configModels:LyricConfig.TextAlignments}"
                                            SelectedItem="{Binding RolledLyric.LyricTextAlignment}" />


                                        <CheckBox Content="显示翻译"
                                                  IsChecked="{Binding RolledLyric.ShowTranslation}" />

                                    </StackPanel>
                                </Flyout>
                            </Button.Flyout>

                        </Button>

                        <Button
                            Classes="Icon"
                            Command="{Binding $parent[Window].((viewModels:MainWindowViewModel)DataContext).ShowMusicPlaylistCommand}">
                            <PathIcon
                                Data="{StaticResource SemiIconDescend2}" />
                        </Button>

                    </StackPanel>

                </Grid>

                <StackPanel Grid.Row="3" Margin="20,0,20,20">
                    <!--  进度条  -->
                    <Slider 
                            Maximum="{Binding MusicPlayerViewModel.CurrentMusicItem.Duration.TotalSeconds}"
                            Value="{Binding MusicPlayerViewModel.CurrentPlayPosition}">
                        <Slider.Transitions>
                            <Transitions>
                                <BrushTransition Duration="0:0:0.2" Property="Foreground" />
                                <BrushTransition Duration="0:0:0.2" Property="Background" />
                            </Transitions>
                        </Slider.Transitions>
                    </Slider>

                    <!--  播放时长 / 总时长  -->
                    <Panel>

                        <TextBlock FontSize="13"
                                   Text="{Binding MusicPlayerViewModel.CurrentPlayPosition, Mode=OneWay, Converter={StaticResource SecondsToStringConverter}}" />

                        <TextBlock
                            FontSize="13"
                            HorizontalAlignment="Right"
                            Text="{Binding MusicPlayerViewModel.CurrentMusicItem.Duration, Mode=OneWay, Converter={StaticResource TruncateDecimalConverter}}" />

                    </Panel>
                </StackPanel>

            </Grid>

            <!--
        ~1~  动态颜色遮罩  @1@
        <Rectangle Opacity="1">
            <Rectangle.Fill>
                <RadialGradientBrush Center="25%,70%" GradientOrigin="20%,70%" RadiusX="50%" RadiusY="70%">
                    <GradientStop Color="{Binding ColorsList[0]}" Offset="0" />
                    <GradientStop Color="{Binding ColorsList[1]}" Offset="0.9" />
                    <GradientStop Color="{Binding ColorsList[2]}" Offset="1" />
                </RadialGradientBrush>
            </Rectangle.Fill>
            <Rectangle.Effect>
                <BlurEffect Radius="250" />
            </Rectangle.Effect>
        </Rectangle>
        -->

        </Panel>

    </ThemeVariantScope>
    
</UserControl>