<Grid ColumnDefinitions="Auto,*" ColumnSpacing="20" Margin="0,10"
      d:DesignHeight="450" d:DesignWidth="800"
      mc:Ignorable="d"
      x:Class="QwQ_Music.Views.Pages.UiConfigPage"
      x:DataType="pages:UiConfigPageViewModel"
      xmlns="https://github.com/avaloniaui"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:pages="clr-namespace:QwQ_Music.ViewModels.Pages"
      xmlns:u="https://irihi.tech/ursa"
      xmlns:anchorControl="clr-namespace:QwQ_Music.UI.Controls.AnchorControl">

    <u:SelectionList Grid.Column="0" Name="NavigationList">
    
        <TextBlock Text="封面" />
        <TextBlock Text="主题" />

    </u:SelectionList>

    <anchorControl:Anchor Grid.Column="1" IndexSource="{Binding ElementName=NavigationList}">

        <anchorControl:Anchor.Styles>

            <Style Selector="StackPanel">
                <Setter Property="Spacing" Value="10" />
            </Style>

        </anchorControl:Anchor.Styles>

        <anchorControl:Anchor.HeaderTemplate>

            <DataTemplate DataType="x:String">
                <Panel>
                    <TextBlock FontSize="16" Text="{Binding}" FontWeight="Bold" VerticalAlignment="Center" />
                    <Separator VerticalAlignment="Bottom" Margin="0" />
                </Panel>
            </DataTemplate>

        </anchorControl:Anchor.HeaderTemplate>

        <anchorControl:AnchorItem Header="封面">

            <StackPanel Spacing="10">

                <CheckBox
                    IsChecked="{Binding UiConfig.CoverConfig.AllowNonSquareCover}">
                    <StackPanel Orientation="Horizontal" Spacing="10">
                        <TextBlock Text="允许异形封面" />
                        <TextBlock FontSize="13" VerticalAlignment="Center" Classes="Secondary" Text="在重新加载时生效" />
                    </StackPanel>
                </CheckBox>

                <Panel>
                    <TextBlock Text="颜色缓存 : " VerticalAlignment="Center" />
                    <Button
                        Command="{Binding ClearCoverColorCommand}"
                        Content="清空"
                        HorizontalAlignment="Right" />
                </Panel>

                <Panel>
                    <TextBlock Text="取色算法 : " VerticalAlignment="Center" />

                    <ComboBox HorizontalAlignment="Right"
                              ItemsSource="{Binding ColorExtractionAlgorithms}"
                              SelectedValueBinding="{Binding Key}"
                              SelectedValue="{Binding UiConfig.CoverConfig.SelectedColorExtractionAlgorithm}">

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Key}" ToolTip.Tip="{Binding Value}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Panel>

                <CheckBox
                    Content="忽略白色"
                    IsChecked="{Binding UiConfig.CoverConfig.IgnoreWhite}" />

                <CheckBox
                    Content="转化为Lab矢量"
                    IsVisible="{Binding UiConfig.CoverConfig.SelectedColorExtractionAlgorithm,Converter={StaticResource StringCompareConverter},ConverterParameter='KMeans'}"
                    IsChecked="{Binding UiConfig.CoverConfig.ToLab}" />

                <CheckBox
                    Content="使用UseKMeansPp"
                    IsVisible="{Binding UiConfig.CoverConfig.SelectedColorExtractionAlgorithm,Converter={StaticResource StringCompareConverter},ConverterParameter='KMeans'}"
                    IsChecked="{Binding UiConfig.CoverConfig.UseKMeansPp}" />

            </StackPanel>

        </anchorControl:AnchorItem>

        <anchorControl:AnchorItem Header="主题">

            <StackPanel Spacing="10">

                <Panel>
                    <TextBlock Text="字体" VerticalAlignment="Center" />
                    <Button HorizontalAlignment="Right"
                            Foreground="{DynamicResource TextBlockDefaultForeground}"
                            FontWeight="Normal"
                            Padding="{DynamicResource ComboBoxSelectorDefaultPadding}"
                            Background="{DynamicResource BorderedBackground}"
                            BorderBrush="{DynamicResource BorderedBorderBrush}"
                            MinWidth="80">

                        <Button.Styles>
                            <Style Selector="Button">
                                
                                <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                                    <Setter Property="Background" Value="{DynamicResource SemiColorBackground3}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource SemiLightBlue5}" />
                                </Style>

                                <Style Selector="^:focus /template/ ContentPresenter#PART_ContentPresenter">
                                    <Setter Property="Background" Value="{DynamicResource SemiColorBackground2}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource SemiBlue5}" />
                                </Style>

                                <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                                    <Setter Property="Background" Value="{DynamicResource SemiColorBackground4}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource SemiBlue5}" />
                                </Style>
                            </Style>

                            <Style Selector="Button  PathIcon">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource ComboBoxIconDefaultForeground}" />
                            </Style>

                            <Style Selector="Button:pointerover  PathIcon">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource ComboBoxIconPointeroverForeground}" />
                            </Style>

                        </Button.Styles>

                        <Grid ColumnDefinitions="*,Auto">
                            <TextBlock Text="{Binding AppResources.CurrentFont}"/>
                            <PathIcon
                                Name="DropDownGlyph"
                                Grid.Column="1"
                                Theme="{DynamicResource InnerPathIcon}"
                                Width="{DynamicResource ComboBoxIconWidth}"
                                Data="{DynamicResource ComboBoxIcon}"
                                IsHitTestVisible="False"
                                UseLayoutRounding="False">

                            </PathIcon>
                        </Grid>

                        <Button.Flyout>
                            <Flyout>
                                
                                <Grid RowDefinitions="Auto,*" RowSpacing="10" Height="300" Width="200">

                                    <Grid.Styles>

                                        <Style Selector="ListBoxItem">
                                            <Setter Property="CornerRadius" Value="8" />
                                            <Setter Property="Margin" Value="0,0,0,5" />

                                            <Style Selector="^:selected">
                                                <Setter Property="Background" Value="{DynamicResource SemiBlue0}" />
                                                <Setter Property="Foreground" Value="{DynamicResource SemiBlue4}" />
                                            </Style>
                                        </Style>

                                    </Grid.Styles>

                                    <Border HorizontalAlignment="Center"
                                            Theme="{StaticResource RadioButtonGroupBorder}" CornerRadius="8">

                                        <StackPanel Orientation="Horizontal" Spacing="0">
                                            <RadioButton Name="CustomFontConfig" Content="用户字体" IsChecked="True"
                                                         Theme="{DynamicResource ButtonRadioButton}" />
                                            <RadioButton Name="SystemFontConfig" Content="系统字体"
                                                         Theme="{DynamicResource ButtonRadioButton}" />
                                        </StackPanel>
                                    </Border>

                                    <ScrollViewer Grid.Row="1">
                                        <Interaction.Behaviors>
                                            <DataTrigger Binding="{Binding #CustomFontConfig.IsChecked}"
                                                         Value="True">
                                                <ChangeAvaloniaPropertyAction
                                                    TargetProperty="{x:Static ContentControl.ContentProperty}">
                                                    <ChangeAvaloniaPropertyAction.Value>

                                                        <ListBox ItemsSource="{Binding AppResources.CustomFonts}"
                                                                 SelectedValueBinding="{Binding Key}"
                                                                 SelectedValue="{Binding AppResources.CurrentFont}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Key}"
                                                                               />
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                    </ChangeAvaloniaPropertyAction.Value>
                                                </ChangeAvaloniaPropertyAction>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding #SystemFontConfig.IsChecked}"
                                                         Value="True">
                                                <ChangeAvaloniaPropertyAction
                                                    TargetProperty="{x:Static ContentControl.ContentProperty}">
                                                    <ChangeAvaloniaPropertyAction.Value>

                                                        <ListBox ItemsSource="{Binding AppResources.SystemFonts}"
                                                                 SelectedValueBinding="{Binding Key}"
                                                                 SelectedValue="{Binding AppResources.CurrentFont}">
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Key}"
                                                                               FontFamily="{Binding Value}" />
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                    </ChangeAvaloniaPropertyAction.Value>
                                                </ChangeAvaloniaPropertyAction>
                                            </DataTrigger>
                                        </Interaction.Behaviors>

                                    </ScrollViewer>

                                </Grid>

                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Panel>

                <Panel>
                    <TextBlock Text="主题模式 " VerticalAlignment="Center" />
                    <ComboBox HorizontalAlignment="Right"
                              ItemsSource="{Binding ThemeModes}"
                              DisplayMemberBinding="{Binding Value}"
                              SelectedValueBinding="{Binding Key}"
                              SelectedValue="{Binding ThemeMode}" />
                </Panel>

            </StackPanel>

        </anchorControl:AnchorItem>

    </anchorControl:Anchor>

</Grid>