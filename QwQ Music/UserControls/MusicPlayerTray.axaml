<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModel="clr-namespace:QwQ_Music.ViewModels"
             x:DataType="viewModel:MusicPlayerTrayViewModel"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customControls="clr-namespace:QwQ_Music.CustomControls"
             xmlns:behaviors="clr-namespace:QwQ_Music.Behaviors"
             xmlns:u="https://irihi.tech/ursa"
             mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="125"
             x:Class="QwQ_Music.UserControls.MusicPlayerTray">

    <UserControl.Styles>

        <Style Selector="Image.AlbumCoverRotate">
            <Style.Animations>
                <Animation IterationCount="Infinite" Duration="0:0:10" FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="RotateTransform.Angle" Value="{Binding AlbumCoverRecordAngle}" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="RotateTransform.Angle"
                                Value="{Binding AlbumCoverRecordAngle,
                            Converter={StaticResource CalcConverter},
                            ConverterParameter='@VALUE + 360'}" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        
        
        <Style Selector="Image.AlbumCoverBinding">
            <Setter Property="Source"
                    Value="{Binding MusicPlayerViewModel.CurrentMusicItem.AlbumImageIndex,Mode=OneWay,Converter={StaticResource AlbumImageConverter}}" />
        </Style>


    </UserControl.Styles>

    <Border CornerRadius="25"
            Background="Transparent"
            BoxShadow="0 0 10 0 LightGray"
            Margin="20">

        <Grid ColumnDefinitions="Auto,Auto,*">
            <!-- 专辑按钮 -->
            <Button Classes="None"
                    Background="{x:Null}"
                    Command="{Binding MusicPlayerViewModel.TogglePlaybackCommand}">
                <Border Margin="10"
                        BorderBrush="White"
                        BorderThickness="3"
                        Background="Black"
                        BoxShadow="0 0 10 0 DarkGray"
                        behaviors:DynamicCornerBehavior.IsEnabled="True">

                    <Border ClipToBounds="True" Margin="5">
                        <!-- 专辑封面 Image 控件 -->
                        <Image RenderOptions.BitmapBlendingMode="Source"
                               MaxHeight="60"
                               MaxWidth="60"
                               Classes.AlbumCoverNull="{Binding MusicPlayerViewModel.CurrentMusicItem.AlbumImageIndex,Converter={x:Static ObjectConverters.IsNull}}"
                               Classes.AlbumCoverBinding="{Binding MusicPlayerViewModel.CurrentMusicItem.AlbumImageIndex,Converter={x:Static ObjectConverters.IsNotNull}}"
                               Classes.AlbumCoverRotate="{Binding MusicPlayerViewModel.IsPlaying}">

                            <Image.RenderTransform>
                                <RotateTransform Angle="{Binding AlbumCoverCurrentAngle,Mode=OneWayToSource}" />
                            </Image.RenderTransform>

                            <Image.Styles>

                                <Style Selector="Image.AlbumCoverBinding">
                                    <Setter Property="Source"
                                            Value="{Binding MusicPlayerViewModel.CurrentMusicItem.CoverPathProperty,Mode=OneWay,Converter={StaticResource AlbumImageConverter}}" />
                                </Style>

                            </Image.Styles>
                            
                        </Image>
                    </Border>

                </Border>
            </Button>

            <!-- 音乐信息 -->
            <StackPanel Width="80" Grid.Column="1" VerticalAlignment="Center" Spacing="5">

                <TextBlock TextTrimming="CharacterEllipsis"
                           Text="{Binding MusicPlayerViewModel.CurrentMusicItem.TitleProperty}"
                           ToolTip.Tip="{Binding RelativeSource={RelativeSource Self},Path=Text}"
                           FontWeight="DemiBold" />
                <TextBlock Classes="Tertiary"
                           Text="{Binding MusicPlayerViewModel.CurrentMusicItem.ArtistsProperty}"
                           TextTrimming="CharacterEllipsis"
                           ToolTip.Tip="{Binding RelativeSource={RelativeSource Self},Path=Text}"
                           FontSize="12" />

            </StackPanel>

            <!-- 播放控制 -->
            <Grid Grid.Column="2"
                  Margin="0,5,0,10"
                  ColumnDefinitions="*,Auto"
                  RowDefinitions="*,Auto">

                <StackPanel Spacing="20"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">

                    <!-- 上一首 -->
                    <Button Classes="Icon"
                            Command="{Binding  MusicPlayerViewModel.TogglePreviousSongCommand}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True"
                            Foreground="{DynamicResource TextBlockDefaultForeground}">
                        <PathIcon Height="30" Data="{StaticResource PlayIconData}" RenderTransform="rotate(180deg)" />
                    </Button>

                    <!-- 播放/暂停 按钮 -->
                    <Button Name="PlayButton"
                            Classes="None"
                            Command="{Binding MusicPlayerViewModel.TogglePlaybackCommand}">

                        <Panel>
                            <Border Classes.Run="{Binding #PlayButton.IsPointerOver}"
                                    Classes.Reduction="{Binding !#PlayButton.IsPointerOver}"
                                    Background="#FF51C5FF"
                                    Padding="{Binding PlayButtonPadding,Mode=OneWayToSource}"
                                    ClipToBounds="True"
                                    behaviors:DynamicCornerBehavior.IsEnabled="True">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="{Binding PlayButtonAngle,Mode=OneWayToSource}" />
                                </Border.RenderTransform>

                                <Border.Styles>

                                    <Style Selector="Border.Reduction">
                                        <Style.Animations>
                                            <Animation Duration="0:0:1" FillMode="Forward" Easing="QuadraticEaseIn">
                                                <KeyFrame KeySpline="0.3,1.3,1,0.13" Cue="0%">
                                                    <Setter Property="RotateTransform.Angle"
                                                            Value="{Binding PlayButtonAngle}" />
                                                    <Setter Property="Padding" Value="{Binding PlayButtonPadding}" />
                                                </KeyFrame>
                                                <KeyFrame KeySpline="0.3,1.3,1,1.13" Cue="100%">
                                                    <Setter Property="RotateTransform.Angle" Value="0" />
                                                    <Setter Property="Padding" Value="0" />
                                                </KeyFrame>
                                            </Animation>
                                        </Style.Animations>
                                    </Style>

                                    <Style Selector="Border.Run">
                                        <Style.Animations>
                                            <Animation Duration="0:0:1" FillMode="Forward" Easing="QuadraticEaseIn">
                                                <KeyFrame KeySpline="0.3,1.3,1,0.13" Cue="0%">
                                                    <Setter Property="RotateTransform.Angle"
                                                            Value="{Binding PlayButtonAngle}" />
                                                    <Setter Property="Padding" Value="{Binding PlayButtonPadding}" />
                                                </KeyFrame>
                                                <KeyFrame KeySpline="0.3,1.3,1,1.13" Cue="100%">
                                                    <Setter Property="RotateTransform.Angle" Value="180" />
                                                    <Setter Property="Padding" Value="5" />
                                                </KeyFrame>
                                            </Animation>
                                        </Style.Animations>
                                    </Style>

                                </Border.Styles>

                                <Ellipse Margin="3" Fill="#FF7BE0FF">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="-8" Y="8" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>

                            </Border>

                            <customControls:SwitchControl Height="30"
                                                          Width="30"
                                                          Condition="{Binding MusicPlayerViewModel.IsPlaying}">

                                <customControls:SwitchControl.TrueContent>
                                    <PathIcon
                                        Foreground="White"
                                        Data="{StaticResource PauseIconData}" />
                                </customControls:SwitchControl.TrueContent>

                                <customControls:SwitchControl.FalseContent>
                                    <PathIcon
                                        Foreground="White"
                                        Data="{StaticResource PlayIconData}" />
                                </customControls:SwitchControl.FalseContent>

                            </customControls:SwitchControl>

                        </Panel>
                    </Button>

                    <!-- 下一首 -->
                    <Button Classes="Icon"
                            Command="{Binding MusicPlayerViewModel.ToggleNextSongCommand}"
                            behaviors:DynamicCornerBehavior.IsEnabled="True"
                            Foreground="{DynamicResource TextBlockDefaultForeground}">
                        <PathIcon Height="30" Data="{StaticResource PlayIconData}" />
                    </Button>
                    
                    <Button Classes="Icon" Command="{Binding MusicPlayerViewModel.RefreshCurrentMusicItemCommand}"
                                          behaviors:DynamicCornerBehavior.IsEnabled="True"
                                          Foreground="{DynamicResource TextBlockDefaultForeground}">
                        <PathIcon Height="12" Width="12" Margin="5" Data="{StaticResource SemiIconRefresh2}" />
                    </Button>

                </StackPanel>

                <!-- 进度条 -->
                <Slider Grid.Row="1"
                        Grid.Column="0"
                        Margin="20,0"
                        Maximum="{Binding MusicPlayerViewModel.CurrentMusicItem.DurationProperty,Converter={StaticResource StringToSecondsConverter}}"
                        Value="{Binding MusicPlayerViewModel.CurrentDurationInSeconds}" />

                <!-- 播放时长 / 总时长 -->
                <StackPanel Margin="0,0,10,0"
                            Grid.Row="1"
                            Grid.Column="1"
                            Orientation="Horizontal">

                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding MusicPlayerViewModel.CurrentDurationInSeconds,Mode=OneWay,Converter={StaticResource SecondsToStringConverter}}"
                               FontSize="13" />
                    

                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding MusicPlayerViewModel.CurrentMusicItem.DurationProperty,Mode=OneWay,Converter={StaticResource TruncateDecimalConverter}}"
                               FontSize="11" />

                    <StackPanel.Styles>
                        <Style Selector="StackPanel > TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="{StaticResource Consolab}" />
                        </Style>
                    </StackPanel.Styles>

                </StackPanel>

                <!-- 操作按钮 -->
                <WrapPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Width="100">
                    
                    <WrapPanel.Resources>
                        <!-- ReSharper disable once Xaml.RedundantResource -->
                        <x:Double x:Key="FlyoutMinWidth">30</x:Double>
                    </WrapPanel.Resources>

                    <Button Classes="Icon">

                        <Button.Resources>
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <CornerRadius x:Key="FlyoutCornerRadius">10</CornerRadius>
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <Thickness x:Key="FlyoutBorderThickness">1</Thickness>
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <Thickness x:Key="FlyoutPadding">0</Thickness>
                        </Button.Resources>

                        <PathIcon Height="13" Width="13" Data="{StaticResource SemiIconSimilarity}" />

                        <Button.Flyout>

                            <Flyout Placement="Top">

                                <Grid ColumnDefinitions="Auto,*">

                                    <ScrollViewer Height="300" Margin="0,15">

                                        <u:SelectionList Name="AudioEffectSelectionList" SelectedIndex="0"
                                                         Margin="10,0,10,0">

                                            <u:SelectionList.Styles>
                                                <Style Selector="u|SelectionListItem">
                                                    <Setter Property="RenderTransform" Value="translateY(-5px)" />
                                                    <Setter Property="Margin" Value="2"/>
                                                </Style>

                                            </u:SelectionList.Styles>

                                            <u:SelectionList.Indicator>
                                                <Border
                                                    Height="3"
                                                    Margin="8,0,8,5"
                                                    VerticalAlignment="Bottom"
                                                    CornerRadius="3"
                                                    Background="{DynamicResource SemiBlue5}" />
                                            </u:SelectionList.Indicator>

                                            <u:SelectionList.Styles>
                                                <Style Selector="u|SelectionList > StackPanel">
                                                    <Setter Property="Spacing" Value="5" />
                                                    <Setter Property="Orientation" Value="Horizontal" />
                                                </Style>

                                            </u:SelectionList.Styles>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnabledStereoEnhancementEffect}" />
                                                <TextBlock Text="立体效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableSpatialEffect}" />
                                                <TextBlock Text="空间效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableRotatingEffect}" />
                                                <TextBlock Text="环绕效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableReverbEffect}" />
                                                <TextBlock Text="混响效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableEchoesEffect}" />
                                                <TextBlock Text="回声效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableDistortionEffect}" />
                                                <TextBlock Text="失真效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableTremoloEffect}" />
                                                <TextBlock Text="颤音效果" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableCompressorEffect}" />
                                                <TextBlock Text="压缩器" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnabledEqualizerEffect}" />
                                                <TextBlock Text="均衡器" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnableFadeEffect}" />
                                                <TextBlock Text="淡入淡出" />
                                            </StackPanel>

                                            <StackPanel>
                                                <CheckBox
                                                    IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsEnabledMultiChannelReplayGainEffect}" />
                                                <TextBlock Text="回调增益" />
                                            </StackPanel>

                                        </u:SelectionList>

                                    </ScrollViewer>

                                    <ScrollViewer Grid.Column="1" Height="300" >

                                        <customControls:IndexControl
                                            Width="350"
                                            Margin="10,5,20,5"
                                            Index="{Binding #AudioEffectSelectionList.SelectedIndex}">

                                            <customControls:IndexControl.PageTransition>
                                                <CompositePageTransition>
                                                    <CrossFade Duration="0:0:0.5" />
                                                    <PageSlide Duration="0:0:0.3" Orientation="Vertical"
                                                               SlideInEasing="QuadraticEaseIn"
                                                               SlideOutEasing="QuadraticEaseOut" />
                                                </CompositePageTransition>
                                            </customControls:IndexControl.PageTransition>

                                            <customControls:IndexControl.Styles>
                                                <Style Selector="customControls|IndexControl > StackPanel">
                                                    <Setter Property="Spacing" Value="10" />
                                                </Style>
                                            </customControls:IndexControl.Styles>

                                            <StackPanel>

                                                <TextBlock Text="效果增强" FontWeight="Black" />

                                                <TextBlock
                                                    HorizontalAlignment="Left"
                                                    Text="{Binding #StereoEnhancementFactor.Value, StringFormat='增强因子 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="StereoEnhancementFactor" Minimum="0.5" Maximum="3.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.StereoEnhancementFactor}" />

                                                <TextBlock
                                                    Text="{Binding #StereoStereoWidth.Value, StringFormat='立体宽度 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="StereoStereoWidth" Minimum="0.0" Maximum="2.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.StereoStereoWidth}" />

                                                <TextBlock
                                                    Text="{Binding #StereoHighFrequencyBoost.Value, StringFormat='高频增强 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="StereoHighFrequencyBoost" Minimum="0.0" Maximum="2.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.StereoHighFrequencyBoost}" />

                                                <TextBlock
                                                    Text="{Binding #DynamicRangeCompression.Value, StringFormat='动态压缩 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="DynamicRangeCompression" Minimum="0.0" Maximum="1.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.StereoDynamicRangeCompression}" />

                                                <CheckBox FontSize="12" FontWeight="Black" Content="混合低频信号"
                                                          IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.IsBassMixing}" />

                                            </StackPanel>

                                            <Panel>


                                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                                            Spacing="5"
                                                            Classes.Transparent="{Binding !#SpeakerDraggableContainer.IsPointerOver}"
                                                            Margin="30">

                                                    <StackPanel.Transitions>
                                                        <Transitions>
                                                            <DoubleTransition Property="Opacity" Duration="0:0:0.5" />
                                                        </Transitions>
                                                    </StackPanel.Transitions>

                                                    <StackPanel.Styles>
                                                        <Style Selector="StackPanel.Transparent">
                                                            <Setter Property="Opacity" Value="0" />
                                                        </Style>
                                                    </StackPanel.Styles>

                                                    <TextBlock Classes="Tertiary" FontSize="12"
                                                               Text="{Binding MusicPlayerViewModel.SoundEffectConfigModel.SpatialAngle,StringFormat=' 当前角度 : {0:F3} '}" />
                                                    <TextBlock Classes="Tertiary" FontSize="12"
                                                               Text="{Binding MusicPlayerViewModel.SoundEffectConfigModel.SpatialDistance,StringFormat=' 当前距离 : {0:F3} '}" />
                                                </StackPanel>

                                                <customControls:DraggableContainer
                                                    Name="SpeakerDraggableContainer"
                                                    CornerRadius="20"
                                                    BorderThickness="1"
                                                    BorderBrush="{DynamicResource BorderCardBorderBrush}">
                                                    <Image Width="60" Height="60"
                                                           customControls:DraggableContainer.IsDraggable="False"
                                                           Source="{StaticResource CatsEars}" />

                                                    <Border
                                                        BorderBrush="White"
                                                        BorderThickness="2"
                                                        Background="Black"
                                                        BoxShadow="0 0 10 0 DarkGray"
                                                        behaviors:DynamicCornerBehavior.IsEnabled="True">

                                                        <Border ClipToBounds="True" Margin="3" IsHitTestVisible="False">

                                                            <Image RenderOptions.BitmapBlendingMode="Source"
                                                                   Width="30" Height="30"
                                                                   Classes.AlbumCoverNull="{Binding MusicPlayerViewModel.CurrentMusicItem.AlbumImageIndex,Converter={x:Static ObjectConverters.IsNull}}"
                                                                   Classes.AlbumCoverBinding="{Binding MusicPlayerViewModel.CurrentMusicItem.AlbumImageIndex,Converter={x:Static ObjectConverters.IsNotNull}}"
                                                                   Classes.AlbumCoverRotate="{Binding MusicPlayerViewModel.IsPlaying}" />
                                                        </Border>

                                                    </Border>


                                                    <Interaction.Behaviors>

                                                        <EventTriggerBehavior EventName="PositionChanged">
                                                            <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                                            <InvokeCommandAction
                                                                Command="{Binding $parent[UserControl].((viewModel:MusicPlayerTrayViewModel)DataContext).MusicPlayerViewModel.SoundEffectConfigModel.SpeakerPositionChangedCommand}"
                                                                PassEventArgsToCommand="True" />
                                                        </EventTriggerBehavior>
                                                    </Interaction.Behaviors>

                                                </customControls:DraggableContainer>

                                            </Panel>

                                            <StackPanel>

                                                <StackPanel Spacing="5" Orientation="Horizontal">

                                                    <TextBlock Text="旋转方向" FontSize="12"
                                                               FontWeight="Black" />

                                                    <CheckBox
                                                        Name="RotationDirectionCheckBox"
                                                        VerticalAlignment="Center" FontSize="12"
                                                        IsChecked="{Binding MusicPlayerViewModel.SoundEffectConfigModel.RotatingIsClockwise}">
                                                        <customControls:SwitchControl
                                                            Condition="{Binding #RotationDirectionCheckBox.IsChecked}">
                                                            <customControls:SwitchControl.TrueContent>顺时针</customControls:SwitchControl.TrueContent>
                                                            <customControls:SwitchControl.FalseContent>逆时针</customControls:SwitchControl.FalseContent>
                                                        </customControls:SwitchControl>
                                                    </CheckBox>

                                                </StackPanel>

                                                <u:Divider />

                                                <TextBlock
                                                    Text="{Binding #RotatingRotationSpeed.Value, StringFormat='速度 : {0:F3} 圈/秒'}"
                                                    FontSize="12" />
                                                <Slider Name="RotatingRotationSpeed" Minimum="0.0" Maximum="1.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.RotatingRotationSpeed}" />

                                                <TextBlock
                                                    Text="{Binding #RotatingRadius.Value, StringFormat='半径 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="RotatingRadius" Minimum="0.0" Maximum="100"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.RotatingRadius}" />

                                            </StackPanel>

                                            <StackPanel>

                                                <TextBlock Text="基础属性" FontWeight="Black" />

                                                <TextBlock
                                                    Text="{Binding #ReverbRoomSize.Value, StringFormat='房间大小 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="ReverbRoomSize" Minimum="0.5" Maximum="2.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.ReverbRoomSize}" />

                                                <TextBlock
                                                    Text="{Binding #ReverbDryMix.Value, StringFormat='干信号比例 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="ReverbDryMix" Minimum="0.0" Maximum="1.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.ReverbDryMix}" />

                                                <TextBlock
                                                    Text="{Binding #ReverbWetMix.Value, StringFormat='湿信号比例 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="ReverbWetMix" Minimum="0.0" Maximum="1.0"
                                                        Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.ReverbWetMix}" />

                                                <TextBlock Text="扩展属性" FontWeight="Black" />

                                                <TextBlock
                                                    Text="{Binding #ReverbHighCutFrequency.Value,StringFormat='高频衰减 : {0:F3}'}"
                                                    FontSize="12" />
                                                <Slider Name="ReverbHighCutFrequency"
                                                                    Minimum="0"
                                                                    Maximum="1"
                                                                    Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.ReverbDampening}" />
                                                
                                                <!--
                                                <TextBlock
                                                    Text="{Binding #ReverbTime.Value,StringFormat='衰减时间 : {0:F3} 秒'}"
                                                    FontSize="12" />
                                                <Slider Name="ReverbTime"
                                                                    Minimum="0"
                                                                    Maximum="10"
                                                                    Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.ReverbDecayTime}" />
                                                                    -->
                                                
                                                <TextBlock
                                                    Text="{Binding #ReverbPreDelayMs.Value, StringFormat='预延迟 : {0:F3} 毫秒'}"
                                                    FontSize="12" />
                                                <Slider Name="ReverbPreDelayMs"
                                                                    Minimum="0"
                                                                    Maximum="200"
                                                                    Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.ReverbPreDelayMs}" />
                                                
                                                
                                            </StackPanel>

                                            <StackPanel />

                                            <StackPanel />

                                            <StackPanel />

                                            <StackPanel />

                                            <Grid RowDefinitions="Auto,*">
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Content="恢复默认" FontSize="12" CornerRadius="8"
                                                            Command="{Binding MusicPlayerViewModel.SoundEffectConfigModel.RestoreDefaultEqualizerVolumeCommand}" />
                                                </StackPanel>

                                                <Border Grid.Row="1" BorderThickness="1"
                                                        BorderBrush="{DynamicResource BorderCardBorderBrush}"
                                                        CornerRadius="10" Margin="0,10,0,0">

                                                    <ItemsControl HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MusicPlayerViewModel.SoundEffectConfigModel.EqualizerConfigs}"
                                                                  Margin="0,20,0,10">

                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>

                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid Width="32" RowDefinitions="*,Auto">

                                                                    <Slider HorizontalAlignment="Center"
                                                                            Minimum="-12"
                                                                            Value="{Binding GainValue}"
                                                                            Maximum="12"
                                                                            Orientation="Vertical">

                                                                        <Interaction.Behaviors>

                                                                            <EventTriggerBehavior
                                                                                EventName="ValueChanged">
                                                                                <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                                                                <InvokeCommandAction
                                                                                    Command="{Binding $parent[UserControl].((viewModel:MusicPlayerTrayViewModel)DataContext).MusicPlayerViewModel.SoundEffectConfigModel.EqualizerVolumeChangedCommand}" />
                                                                            </EventTriggerBehavior>
                                                                        </Interaction.Behaviors>

                                                                    </Slider>
                                                                    <TextBlock Grid.Row="1" FontSize="10"
                                                                               Text="{Binding GainValue, StringFormat=' {0:F1} '}"
                                                                               Margin="0,5"
                                                                               HorizontalAlignment="Center"
                                                                               FontFamily="{StaticResource VivoSans}" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>

                                                    </ItemsControl>

                                                </Border>
                                            </Grid>

                                            <StackPanel>

                                                <u:Divider
                                                    Content="{Binding #FadeInMilliseconds.Value, StringFormat='淡入时长 : {0} 毫秒'}"
                                                    FontSize="12" />
                                                <u:NumericIntUpDown Name="FadeInMilliseconds"
                                                                    EmptyInputValue="1"
                                                                    Step="200"
                                                                    Minimum="0"
                                                                    Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.FadeInMilliseconds}" />
                                                <u:Divider
                                                    Content="{Binding #FadeOutMilliseconds.Value, StringFormat='淡出时长 : {0} 毫秒'}"
                                                    FontSize="12" />

                                                <u:NumericIntUpDown Name="FadeOutMilliseconds"
                                                                    EmptyInputValue="1"
                                                                    Step="200"
                                                                    Minimum="0"
                                                                    Value="{Binding MusicPlayerViewModel.SoundEffectConfigModel.FadeOutMilliseconds}" />

                                            </StackPanel>

                                            <StackPanel>

                                                <StackPanel.Resources>

                                                    <!-- ReSharper disable once Xaml.RedundantResource -->
                                                    <x:Double x:Key="BannerTitleFontSize">14</x:Double>

                                                </StackPanel.Resources>

                                                <u:Banner Header="什么是回调增益"
                                                          Content="我也不知道"
                                                          HorizontalContentAlignment="Stretch"
                                                          CornerRadius="8"
                                                          Classes="Bordered"
                                                          FontSize="12" />

                                                <StackPanel Orientation="Horizontal">

                                                    <StackPanel.Styles>
                                                        <Style Selector="StackPanel > TextBlock">
                                                            <Setter Property="FontSize" Value="12" />
                                                        </Style>
                                                    </StackPanel.Styles>

                                                    <TextBlock Text="{Binding StringFormat='已计算增益 : '}" />

                                                    <TextBlock
                                                        Text="{Binding MusicPlayerViewModel.MusicItems.Count,StringFormat='/ {0}'}" />

                                                </StackPanel>


                                                <ProgressBar Value="12"
                                                             Maximum="{Binding MusicPlayerViewModel.MusicItems.Count}" />

                                                <Button Content="计算增益" FontSize="12" CornerRadius="8" />

                                            </StackPanel>

                                        </customControls:IndexControl>

                                    </ScrollViewer>

                                </Grid>
                            </Flyout>

                        </Button.Flyout>
                        
                    </Button>
                    
                    <Button ToolTip.VerticalOffset="-10"
                            ToolTip.Placement="Top"
                            Classes="Icon">

                        <Panel>
                            <Border Background="#20c997"
                                    behaviors:DynamicCornerBehavior.IsEnabled="True"
                                    Margin="7,7,4,7"
                                    IsVisible="{Binding !MusicPlayerViewModel.IsMuted}" />
                            <PathIcon Height="14" Width="14" Data="{StaticResource EmptyVolume}" />
                            <Border Background="#ff6b6b"
                                    Width="3"
                                    CornerRadius="10"
                                    Margin="3"
                                    IsVisible="{Binding MusicPlayerViewModel.IsMuted}"
                                    RenderTransform="rotate(120deg)" />
                        </Panel>

                        <Button.Resources>
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <Thickness x:Key="FlyoutPadding">0</Thickness>  
                            <!-- ReSharper disable once Xaml.RedundantResource -->
                            <x:Double x:Key="FlyoutMinHeight">160</x:Double>
                        </Button.Resources>

                        <Button.Flyout>
                            <Flyout ShowMode="TransientWithDismissOnPointerMoveAway" Placement="Top">

                                <Grid Margin="0,5,0,0" RowDefinitions="Auto,*,Auto">

                                    <TextBlock HorizontalAlignment="Center" Margin="0,0,0,3" FontSize="10"
                                               Text="{Binding MusicPlayerViewModel.VolumePercent}"
                                               FontFamily="{StaticResource VivoSans}" />

                                    <Slider Grid.Row="1" HorizontalAlignment="Center" Orientation="Vertical"
                                            Value="{Binding MusicPlayerViewModel.VolumePercent}" Maximum="100" />

                                    <Button Classes.Silent="{Binding MusicPlayerViewModel.IsMuted}"
                                            Command="{Binding MusicPlayerViewModel.ToggleMuteModeCommand}"
                                            Grid.Row="2"
                                            Margin="5"
                                            Height="20" 
                                            Width="20" 
                                            Classes="Icon">

                                        <PathIcon Data="{StaticResource Prohibit}" />

                                        <Button.Styles>
                                            <Style Selector="Button.Silent">
                                                <Setter Property="Background" Value="#FFFF4D3C" />
                                                <Setter Property="Foreground" Value="White" />
                                                <Style Selector="^:pointerover /template/ ContentPresenter">
                                                    <Setter Property="Background" Value="#AAFF4D3C" />
                                                </Style>
                                            </Style>
                                        </Button.Styles>

                                        <Interaction.Behaviors>

                                            <EventTriggerBehavior EventName="PointerWheelChanged">
                                                <InvokeCommandAction
                                                    Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                                    PassEventArgsToCommand="True" />
                                            </EventTriggerBehavior>

                                        </Interaction.Behaviors>

                                    </Button>

                                </Grid>
                            </Flyout>
                        </Button.Flyout>

                        <ToolTip.Tip>
                            <Panel>
                                <TextBlock IsVisible="{Binding MusicPlayerViewModel.VolumePercent}" FontSize="12">
                                    <Run Text="当前音量：" />
                                    <Run Text="{Binding MusicPlayerViewModel.VolumePercent}" />
                                    <Run Text="%" />
                                </TextBlock>
                                <TextBlock FontSize="12"
                                           IsVisible="{Binding !MusicPlayerViewModel.VolumePercent}"
                                           Text="静音" />
                            </Panel>
                        </ToolTip.Tip>

                        <Interaction.Behaviors>

                            <EventTriggerBehavior EventName="PointerWheelChanged">
                                <InvokeCommandAction Command="{Binding VolumeBarPointerWheelChangedCommand}"
                                                     PassEventArgsToCommand="True" />
                            </EventTriggerBehavior>

                        </Interaction.Behaviors>

                    </Button>

                    <Button Classes="Icon"
                            Command="{Binding $parent[Window].((viewModel:MainWindowViewModel)DataContext).ShowMusicPlaylistCommand}">
                        <PathIcon Height="12" Width="12" Data="{StaticResource SemiIconDescend2}" />
                    </Button>

                    <WrapPanel.Styles>

                        <Style Selector="WrapPanel > Button">
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Width" Value="20" />
                            <Setter Property="CornerRadius" Value="5"/>
                            <Setter Property="Margin" Value="0,0,10,0" />
                        </Style>

                    </WrapPanel.Styles>

                </WrapPanel>
            </Grid>

        </Grid>
    </Border>

</UserControl>